{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign, kodalySigns, analyzeHand } from '../utils/kodalySignsDB';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandDetection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const [detectedSign, setDetectedSign] = useState(null);\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [showDebug, setShowDebug] = useState(false);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [cameraReady, setCameraReady] = useState(false);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7\n    });\n    handsRef.current.onResults(onResults);\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start().then(() => setCameraReady(true)).catch(err => console.error(\"Error starting camera:\", err));\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n    };\n  }, []);\n  const onResults = results => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n        const mirroredLandmarks = landmarks.map(landmark => ({\n          ...landmark,\n          x: 1 - landmark.x\n        }));\n        const handAnalysis = analyzeHand(mirroredLandmarks);\n        setDebugInfo(handAnalysis);\n        const recognition = recognizeKodalySign(mirroredLandmarks);\n        setDetectedSign(recognition);\n      }\n    } else {\n      setDetectedSign(null);\n      setDebugInfo(null);\n    }\n    ctx.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          display: 'none'\n        },\n        width: 640,\n        height: 480,\n        mirrored: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 640,\n        height: 480\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), detectedSign && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detected-sign\",\n        style: {\n          backgroundColor: `rgba(0, 0, 0, ${detectedSign.confidence * 0.9 + 0.1})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: detectedSign.sign.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kodalySigns[detectedSign.sign].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confidence-bar\",\n          style: {\n            width: `${detectedSign.confidence * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInstructions(!showInstructions),\n        children: [showInstructions ? 'Hide' : 'Show', \" Instructions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDebug(!showDebug),\n        children: [showDebug ? 'Hide' : 'Show', \" Debug Info\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), showDebug && debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(debugInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), !cameraReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-status\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Initializing camera... Please allow camera access when prompted.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), showInstructions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Kod\\xE1ly Hand Signs Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signs-guide\",\n        children: Object.entries(kodalySigns).map(([note, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this)]\n        }, note, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usage-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tips for Best Recognition:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keep your hand clearly visible to the camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Make distinct hand shapes as shown in the guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Maintain proper finger positions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Watch the confidence bar for recognition quality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(HandDetection, \"RZMsBcIo//ZWoppLMoS9fOokyy4=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","kodalySigns","analyzeHand","jsxDEV","_jsxDEV","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","detectedSign","setDetectedSign","showInstructions","setShowInstructions","showDebug","setShowDebug","debugInfo","setDebugInfo","cameraReady","setCameraReady","current","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","Camera","video","onFrame","send","image","width","height","start","then","catch","err","console","error","stop","close","results","canvas","ctx","getContext","clearRect","save","scale","translate","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","mirroredLandmarks","map","landmark","x","handAnalysis","recognition","restore","className","children","ref","style","display","mirrored","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","confidence","sign","toUpperCase","description","onClick","JSON","stringify","Object","entries","note","data","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign, kodalySigns, analyzeHand } from '../utils/kodalySignsDB';\r\nimport './HandDetection.css';\r\n\r\nconst HandDetection = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const [detectedSign, setDetectedSign] = useState(null);\r\n    const [showInstructions, setShowInstructions] = useState(true);\r\n    const [showDebug, setShowDebug] = useState(false);\r\n    const [debugInfo, setDebugInfo] = useState(null);\r\n    const [cameraReady, setCameraReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        handsRef.current.onResults(onResults);\r\n\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start()\r\n                .then(() => setCameraReady(true))\r\n                .catch((err) => console.error(\"Error starting camera:\", err));\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onResults = (results) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n        ctx.scale(-1, 1);\r\n        ctx.translate(-canvas.width, 0);\r\n\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                const mirroredLandmarks = landmarks.map(landmark => ({\r\n                    ...landmark,\r\n                    x: 1 - landmark.x\r\n                }));\r\n\r\n                const handAnalysis = analyzeHand(mirroredLandmarks);\r\n                setDebugInfo(handAnalysis);\r\n                \r\n                const recognition = recognizeKodalySign(mirroredLandmarks);\r\n                setDetectedSign(recognition);\r\n            }\r\n        } else {\r\n            setDetectedSign(null);\r\n            setDebugInfo(null);\r\n        }\r\n\r\n        ctx.restore();\r\n    };\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"camera-canvas-container\">\r\n                <Webcam\r\n                    ref={webcamRef}\r\n                    style={{ display: 'none' }}\r\n                    width={640}\r\n                    height={480}\r\n                    mirrored={false}\r\n                />\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={640}\r\n                    height={480}\r\n                />\r\n                {detectedSign && (\r\n                    <div className=\"detected-sign\" style={{\r\n                        backgroundColor: `rgba(0, 0, 0, ${detectedSign.confidence * 0.9 + 0.1})`\r\n                    }}>\r\n                        <h3>{detectedSign.sign.toUpperCase()}</h3>\r\n                        <p>{kodalySigns[detectedSign.sign].description}</p>\r\n                        <div className=\"confidence-bar\" style={{\r\n                            width: `${detectedSign.confidence * 100}%`\r\n                        }}></div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <div className=\"controls\">\r\n                <button onClick={() => setShowInstructions(!showInstructions)}>\r\n                    {showInstructions ? 'Hide' : 'Show'} Instructions\r\n                </button>\r\n                <button onClick={() => setShowDebug(!showDebug)}>\r\n                    {showDebug ? 'Hide' : 'Show'} Debug Info\r\n                </button>\r\n            </div>\r\n\r\n            {showDebug && debugInfo && (\r\n                <div className=\"debug-info\">\r\n                    <h3>Debug Information</h3>\r\n                    <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n\r\n            {!cameraReady && (\r\n                <div className=\"camera-status\">\r\n                    <p>Initializing camera... Please allow camera access when prompted.</p>\r\n                </div>\r\n            )}\r\n\r\n            {showInstructions && (\r\n                <div className=\"instructions\">\r\n                    <h2>Kodály Hand Signs Guide</h2>\r\n                    <div className=\"signs-guide\">\r\n                        {Object.entries(kodalySigns).map(([note, data]) => (\r\n                            <div key={note} className=\"sign-item\">\r\n                                <h3>{note.toUpperCase()}</h3>\r\n                                <p>{data.description}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"usage-tips\">\r\n                        <h3>Tips for Best Recognition:</h3>\r\n                        <ul>\r\n                            <li>Keep your hand clearly visible to the camera</li>\r\n                            <li>Make distinct hand shapes as shown in the guide</li>\r\n                            <li>Maintain proper finger positions</li>\r\n                            <li>Watch the confidence bar for recognition quality</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}