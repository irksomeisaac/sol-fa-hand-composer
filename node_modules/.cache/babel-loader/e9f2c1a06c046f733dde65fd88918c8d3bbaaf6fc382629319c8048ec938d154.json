{"ast":null,"code":"// ... (keep all the helper functions the same until the recognizeKodalySign function)\n\nexport function recognizeKodalySign(landmarks) {\n  if (!landmarks || landmarks.length < 21) return null;\n  const fingers = analyzeFingers(landmarks);\n  const handDir = getHandDirection(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n  const thumbDir = getThumbDirection(landmarks);\n\n  // Debug info\n  const debug = {\n    extensions: fingers.values,\n    handDirection: {\n      verticalAngle: handDir.verticalAngle,\n      isPointingUp: handDir.isPointingUp,\n      isPointingDown: handDir.isPointingDown,\n      isPointingForward: handDir.isPointingForward,\n      isHorizontal: handDir.isHorizontal\n    },\n    palmOrientation: {\n      isDown: palmDir.isDown,\n      isUp: palmDir.isUp,\n      isSide: palmDir.isSide\n    },\n    thumbDirection: {\n      angle: thumbDir.angle,\n      isPointingDown: thumbDir.isPointingDown,\n      isPointingUp: thumbDir.isPointingUp\n    }\n  };\n  let sign = null;\n  let confidence = 0;\n\n  // Log current values\n  console.log('Current hand state:', {\n    fingers: fingers.values,\n    handAngle: handDir.verticalAngle,\n    palmDirection: palmDir,\n    thumbDirection: thumbDir\n  });\n\n  // DO - Tight fist\n  if (fingers.values.thumb < 0.7 &&\n  // More lenient for thumb\n  fingers.values.index < 0.4 &&\n  // Tight fist for other fingers\n  fingers.values.middle < 0.4 && fingers.values.ring < 0.4 && fingers.values.pinky < 0.4) {\n    sign = 'do';\n    confidence = 0.9;\n  }\n\n  // RE - Angled up, fingers together\n  else if (fingers.values.index > 0.8 && fingers.values.middle > 0.8 && fingers.values.ring > 0.8 && fingers.values.pinky > 0.8 && handDir.verticalAngle > 20 && handDir.verticalAngle < 70) {\n    sign = 're';\n    confidence = 0.9;\n  }\n\n  // MI - Flat hand horizontal\n  else if (fingers.values.index > 0.9 && fingers.values.middle > 0.9 && fingers.values.ring > 0.9 && fingers.values.pinky > 0.9 && Math.abs(handDir.verticalAngle) < 20) {\n    sign = 'mi';\n    confidence = 0.9;\n  }\n\n  // FA - Thumb pointing down, other fingers in fist\n  else if (fingers.values.thumb > 0.7 && fingers.values.index < 0.5 && fingers.values.middle < 0.5 && fingers.values.ring < 0.5 && fingers.values.pinky < 0.5 && thumbDir.angle < -30) {\n    sign = 'fa';\n    confidence = 0.9;\n  }\n\n  // SOL - Curved fingers to side\n  else if (fingers.values.index > 0.8 &&\n  // Based on actual values\n  fingers.values.middle > 0.8 && fingers.values.ring > 0.8 && fingers.values.pinky > 0.8 && Math.abs(handDir.direction.x) > 0.5 && !handDir.isPointingUp && !handDir.isPointingDown) {\n    sign = 'sol';\n    confidence = 0.9;\n  }\n\n  // LA - Based on the values from your screenshot\n  else if (fingers.values.thumb > 0.9 &&\n  // Almost fully extended\n  fingers.values.index > 0.9 && fingers.values.middle > 0.9 && fingers.values.ring > 0.9 && fingers.values.pinky > 0.9 && handDir.verticalAngle < -45) {\n    // Pointing downward\n    sign = 'la';\n    confidence = 0.9;\n  }\n\n  // TI - Index up, others closed\n  else if (fingers.values.index > 0.8 && fingers.values.middle < 0.5 && fingers.values.ring < 0.5 && fingers.values.pinky < 0.5 && handDir.verticalAngle > 30) {\n    sign = 'ti';\n    confidence = 0.9;\n  }\n  if (sign) {\n    console.log('Detected:', sign, 'with confidence:', confidence);\n  }\n  return {\n    sign,\n    confidence,\n    debug\n  };\n}","map":{"version":3,"names":["recognizeKodalySign","landmarks","length","fingers","analyzeFingers","handDir","getHandDirection","palmDir","getPalmDirection","thumbDir","getThumbDirection","debug","extensions","values","handDirection","verticalAngle","isPointingUp","isPointingDown","isPointingForward","isHorizontal","palmOrientation","isDown","isUp","isSide","thumbDirection","angle","sign","confidence","console","log","handAngle","palmDirection","thumb","index","middle","ring","pinky","Math","abs","direction","x"],"sources":["C:/Users/user/sol-fa-app/src/utils/kodalySignsDB.js"],"sourcesContent":["// ... (keep all the helper functions the same until the recognizeKodalySign function)\r\n\r\nexport function recognizeKodalySign(landmarks) {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    const fingers = analyzeFingers(landmarks);\r\n    const handDir = getHandDirection(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n    const thumbDir = getThumbDirection(landmarks);\r\n\r\n    // Debug info\r\n    const debug = {\r\n        extensions: fingers.values,\r\n        handDirection: {\r\n            verticalAngle: handDir.verticalAngle,\r\n            isPointingUp: handDir.isPointingUp,\r\n            isPointingDown: handDir.isPointingDown,\r\n            isPointingForward: handDir.isPointingForward,\r\n            isHorizontal: handDir.isHorizontal\r\n        },\r\n        palmOrientation: {\r\n            isDown: palmDir.isDown,\r\n            isUp: palmDir.isUp,\r\n            isSide: palmDir.isSide\r\n        },\r\n        thumbDirection: {\r\n            angle: thumbDir.angle,\r\n            isPointingDown: thumbDir.isPointingDown,\r\n            isPointingUp: thumbDir.isPointingUp\r\n        }\r\n    };\r\n\r\n    let sign = null;\r\n    let confidence = 0;\r\n\r\n    // Log current values\r\n    console.log('Current hand state:', {\r\n        fingers: fingers.values,\r\n        handAngle: handDir.verticalAngle,\r\n        palmDirection: palmDir,\r\n        thumbDirection: thumbDir\r\n    });\r\n\r\n    // DO - Tight fist\r\n    if (fingers.values.thumb < 0.7 &&    // More lenient for thumb\r\n        fingers.values.index < 0.4 &&     // Tight fist for other fingers\r\n        fingers.values.middle < 0.4 &&\r\n        fingers.values.ring < 0.4 &&\r\n        fingers.values.pinky < 0.4) {\r\n        sign = 'do';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // RE - Angled up, fingers together\r\n    else if (fingers.values.index > 0.8 &&     \r\n             fingers.values.middle > 0.8 &&\r\n             fingers.values.ring > 0.8 &&\r\n             fingers.values.pinky > 0.8 &&\r\n             handDir.verticalAngle > 20 &&     \r\n             handDir.verticalAngle < 70) {\r\n        sign = 're';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // MI - Flat hand horizontal\r\n    else if (fingers.values.index > 0.9 &&      \r\n             fingers.values.middle > 0.9 &&\r\n             fingers.values.ring > 0.9 &&\r\n             fingers.values.pinky > 0.9 &&\r\n             Math.abs(handDir.verticalAngle) < 20) {\r\n        sign = 'mi';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // FA - Thumb pointing down, other fingers in fist\r\n    else if (fingers.values.thumb > 0.7 &&      \r\n             fingers.values.index < 0.5 &&       \r\n             fingers.values.middle < 0.5 &&\r\n             fingers.values.ring < 0.5 &&\r\n             fingers.values.pinky < 0.5 &&\r\n             thumbDir.angle < -30) {\r\n        sign = 'fa';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // SOL - Curved fingers to side\r\n    else if (fingers.values.index > 0.8 &&     // Based on actual values\r\n             fingers.values.middle > 0.8 &&\r\n             fingers.values.ring > 0.8 &&\r\n             fingers.values.pinky > 0.8 &&\r\n             Math.abs(handDir.direction.x) > 0.5 && \r\n             !handDir.isPointingUp &&\r\n             !handDir.isPointingDown) {\r\n        sign = 'sol';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // LA - Based on the values from your screenshot\r\n    else if (fingers.values.thumb > 0.9 &&    // Almost fully extended\r\n             fingers.values.index > 0.9 &&     \r\n             fingers.values.middle > 0.9 &&\r\n             fingers.values.ring > 0.9 &&\r\n             fingers.values.pinky > 0.9 &&\r\n             handDir.verticalAngle < -45) {    // Pointing downward\r\n        sign = 'la';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // TI - Index up, others closed\r\n    else if (fingers.values.index > 0.8 &&      \r\n             fingers.values.middle < 0.5 &&      \r\n             fingers.values.ring < 0.5 &&\r\n             fingers.values.pinky < 0.5 &&\r\n             handDir.verticalAngle > 30) {\r\n        sign = 'ti';\r\n        confidence = 0.9;\r\n    }\r\n\r\n    if (sign) {\r\n        console.log('Detected:', sign, 'with confidence:', confidence);\r\n    }\r\n\r\n    return {\r\n        sign,\r\n        confidence,\r\n        debug\r\n    };\r\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}