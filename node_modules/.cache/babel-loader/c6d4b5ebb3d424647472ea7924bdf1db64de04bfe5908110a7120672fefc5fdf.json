{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\NotationComposer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign } from '../utils/kodalySignsDB';\nimport { audioPlayer } from '../utils/audioUtils';\nimport { MusicComposition, NOTE_DURATIONS, REST_DURATIONS } from '../utils/musicNotation';\nimport { VoiceCommandManager } from '../utils/voiceCommands';\nimport SheetMusic from './SheetMusic';\nimport KodalyReference from './KodalyReference';\nimport './NotationComposer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIDENCE_THRESHOLD = 0.85;\nconst HOLD_FRAMES = 10;\nfunction NotationComposer() {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const compositionRef = useRef(new MusicComposition());\n  const voiceManagerRef = useRef(null);\n  const [detectionState, setDetectionState] = useState({\n    sign: null,\n    confidence: 0,\n    debug: null,\n    handPresent: false\n  });\n  const [compositionState, setCompositionState] = useState(compositionRef.current.getCompositionInfo());\n  const [voiceState, setVoiceState] = useState({\n    isListening: false,\n    isSupported: false,\n    lastCommand: null,\n    lastTranscript: null\n  });\n  const [showReference, setShowReference] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const lastNoteRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const playbackTimeoutRef = useRef(null);\n\n  // Voice command handler\n  const handleVoiceCommand = useCallback((command, transcript) => {\n    const composition = compositionRef.current;\n    switch (command) {\n      case 'ADD_NOTE':\n        if (detectionState.sign) {\n          composition.addNote(detectionState.sign);\n          audioPlayer.playUIFeedback(1200, 200);\n          setCompositionState(composition.getCompositionInfo());\n        } else {\n          audioPlayer.playUIFeedback(400, 300); // Error sound\n        }\n        break;\n      case 'ADD_REST':\n        composition.addRest();\n        audioPlayer.playUIFeedback(800, 200);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'SET_WHOLE_NOTE':\n        composition.setNoteDuration(NOTE_DURATIONS.WHOLE);\n        audioPlayer.playUIFeedback(1000);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'SET_HALF_NOTE':\n        composition.setNoteDuration(NOTE_DURATIONS.HALF);\n        audioPlayer.playUIFeedback(900);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'SET_QUARTER_NOTE':\n        composition.setNoteDuration(NOTE_DURATIONS.QUARTER);\n        audioPlayer.playUIFeedback(800);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'SET_EIGHTH_NOTE':\n        composition.setNoteDuration(NOTE_DURATIONS.EIGHTH);\n        audioPlayer.playUIFeedback(700);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'OCTAVE_UP':\n        composition.octaveUp();\n        audioPlayer.playUIFeedback(1200);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'OCTAVE_DOWN':\n        composition.octaveDown();\n        audioPlayer.playUIFeedback(600);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'PLAY_COMPOSITION':\n        playComposition();\n        break;\n      case 'STOP_PLAYBACK':\n        stopPlayback();\n        break;\n      case 'UNDO':\n        composition.undo();\n        audioPlayer.playUIFeedback(500);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n      case 'CLEAR_ALL':\n        composition.clear();\n        audioPlayer.playUIFeedback(400, 300);\n        setCompositionState(composition.getCompositionInfo());\n        break;\n    }\n    setVoiceState(prev => ({\n      ...prev,\n      lastCommand: command,\n      lastTranscript: transcript\n    }));\n  }, [detectionState.sign]);\n  const playComposition = useCallback(() => {\n    const sequence = compositionRef.current.getPlaybackSequence();\n    if (sequence.length === 0) {\n      audioPlayer.playUIFeedback(400, 300);\n      return;\n    }\n    setIsPlaying(true);\n    audioPlayer.playUIFeedback(1400);\n    sequence.forEach(({\n      note,\n      octave,\n      startTime,\n      duration\n    }) => {\n      setTimeout(() => {\n        audioPlayer.playNote(note, octave);\n        setTimeout(() => {\n          audioPlayer.stopNote();\n        }, duration * 0.8);\n      }, startTime);\n    });\n    const totalDuration = Math.max(...sequence.map(item => item.startTime + item.duration));\n    playbackTimeoutRef.current = setTimeout(() => {\n      setIsPlaying(false);\n    }, totalDuration);\n  }, []);\n  const stopPlayback = useCallback(() => {\n    if (playbackTimeoutRef.current) {\n      clearTimeout(playbackTimeoutRef.current);\n    }\n    audioPlayer.stopNote();\n    setIsPlaying(false);\n  }, []);\n  const handleSignDetection = useCallback(recognition => {\n    const currentSign = recognition === null || recognition === void 0 ? void 0 : recognition.sign;\n    const confidence = (recognition === null || recognition === void 0 ? void 0 : recognition.confidence) || 0;\n    if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\n      if (currentSign === lastNoteRef.current) {\n        frameCountRef.current++;\n        if (frameCountRef.current >= HOLD_FRAMES) {\n          // Play note for feedback only\n          audioPlayer.playNote(currentSign, compositionRef.current.currentOctave);\n        }\n      } else {\n        frameCountRef.current = 0;\n        lastNoteRef.current = currentSign;\n        audioPlayer.stopNote();\n      }\n    } else {\n      frameCountRef.current = 0;\n      lastNoteRef.current = null;\n      audioPlayer.stopNote();\n    }\n  }, []);\n  const onResults = useCallback(results => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n        const mirroredLandmarks = landmarks.map(landmark => ({\n          ...landmark,\n          x: 1 - landmark.x\n        }));\n        const recognition = recognizeKodalySign(mirroredLandmarks);\n        handleSignDetection(recognition);\n        setDetectionState({\n          ...recognition,\n          handPresent: true\n        });\n      }\n    } else {\n      handleSignDetection(null);\n      setDetectionState({\n        sign: null,\n        confidence: 0,\n        debug: null,\n        handPresent: false\n      });\n    }\n    ctx.restore();\n  }, [handleSignDetection]);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7\n    });\n    handsRef.current.onResults(onResults);\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start();\n    }\n\n    // Initialize and automatically start voice commands\n    voiceManagerRef.current = new VoiceCommandManager(handleVoiceCommand);\n    const voiceStatus = voiceManagerRef.current.getStatus();\n    setVoiceState(prev => ({\n      ...prev,\n      isSupported: voiceStatus.isSupported\n    }));\n\n    // Auto-start voice recognition if supported\n    if (voiceStatus.isSupported) {\n      setTimeout(() => {\n        const isListening = voiceManagerRef.current.startListening();\n        setVoiceState(prev => ({\n          ...prev,\n          isListening\n        }));\n        console.log('Voice recognition auto-started');\n      }, 2000); // 2 second delay to ensure everything is ready\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n      if (voiceManagerRef.current) {\n        voiceManagerRef.current.stopListening();\n      }\n      if (playbackTimeoutRef.current) {\n        clearTimeout(playbackTimeoutRef.current);\n      }\n      audioPlayer.stopNote();\n    };\n  }, [onResults, handleVoiceCommand]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notation-composer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"composer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-note-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Note:\", detectionState.sign ? ` ${detectionState.sign.toUpperCase()}${compositionState.currentOctave}` : ' (Hold up hand sign)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Say \\\"Add\\\" to place note on staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `voice-indicator ${voiceState.isListening ? 'listening' : 'inactive'}`,\n          children: voiceState.isSupported ? voiceState.isListening ? '🎤 Voice Active' : '🎤 Voice Starting...' : '❌ Voice Not Supported'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), voiceState.lastCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-command\",\n          children: [\"\\\"\", voiceState.lastTranscript, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-canvas-container\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          style: {\n            display: 'none'\n          },\n          width: 640,\n          height: 480,\n          mirrored: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), detectionState.sign && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [detectionState.sign.toUpperCase(), compositionState.currentOctave]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playback-indicator\",\n          children: \"\\u25B6\\uFE0F Playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SheetMusic, {\n      composition: compositionRef.current,\n      currentNoteDuration: compositionState.currentNoteDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowReference(!showReference),\n        children: [showReference ? 'Hide' : 'Show', \" Reference Guide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Voice commands: \\\"Add\\\" | \\\"Add rest\\\" | \\\"Octave up\\\" | \\\"Play\\\" | \\\"Undo\\\" | \\\"Clear\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this), showReference && /*#__PURE__*/_jsxDEV(KodalyReference, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 9\n  }, this);\n}\n_s(NotationComposer, \"hfyyPVg9YQSTIdO3YLghQuIPagc=\");\n_c = NotationComposer;\nexport default NotationComposer;\nvar _c;\n$RefreshReg$(_c, \"NotationComposer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","audioPlayer","MusicComposition","NOTE_DURATIONS","REST_DURATIONS","VoiceCommandManager","SheetMusic","KodalyReference","jsxDEV","_jsxDEV","CONFIDENCE_THRESHOLD","HOLD_FRAMES","NotationComposer","_s","webcamRef","canvasRef","handsRef","cameraRef","compositionRef","voiceManagerRef","detectionState","setDetectionState","sign","confidence","debug","handPresent","compositionState","setCompositionState","current","getCompositionInfo","voiceState","setVoiceState","isListening","isSupported","lastCommand","lastTranscript","showReference","setShowReference","isPlaying","setIsPlaying","lastNoteRef","frameCountRef","playbackTimeoutRef","handleVoiceCommand","command","transcript","composition","addNote","playUIFeedback","addRest","setNoteDuration","WHOLE","HALF","QUARTER","EIGHTH","octaveUp","octaveDown","playComposition","stopPlayback","undo","clear","prev","sequence","getPlaybackSequence","length","forEach","note","octave","startTime","duration","setTimeout","playNote","stopNote","totalDuration","Math","max","map","item","clearTimeout","handleSignDetection","recognition","currentSign","currentOctave","onResults","results","canvas","ctx","getContext","clearRect","width","height","save","scale","translate","image","drawImage","multiHandLandmarks","landmarks","HAND_CONNECTIONS","color","lineWidth","mirroredLandmarks","landmark","x","restore","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","Camera","video","onFrame","send","start","voiceStatus","getStatus","startListening","console","log","stop","close","stopListening","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","mirrored","currentNoteDuration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/NotationComposer.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign } from '../utils/kodalySignsDB';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\nimport { MusicComposition, NOTE_DURATIONS, REST_DURATIONS } from '../utils/musicNotation';\r\nimport { VoiceCommandManager } from '../utils/voiceCommands';\r\nimport SheetMusic from './SheetMusic';\r\nimport KodalyReference from './KodalyReference';\r\nimport './NotationComposer.css';\r\n\r\nconst CONFIDENCE_THRESHOLD = 0.85;\r\nconst HOLD_FRAMES = 10;\r\n\r\nfunction NotationComposer() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const compositionRef = useRef(new MusicComposition());\r\n    const voiceManagerRef = useRef(null);\r\n    \r\n    const [detectionState, setDetectionState] = useState({\r\n        sign: null,\r\n        confidence: 0,\r\n        debug: null,\r\n        handPresent: false\r\n    });\r\n    \r\n    const [compositionState, setCompositionState] = useState(\r\n        compositionRef.current.getCompositionInfo()\r\n    );\r\n\r\n    const [voiceState, setVoiceState] = useState({\r\n        isListening: false,\r\n        isSupported: false,\r\n        lastCommand: null,\r\n        lastTranscript: null\r\n    });\r\n\r\n    const [showReference, setShowReference] = useState(false);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    const lastNoteRef = useRef(null);\r\n    const frameCountRef = useRef(0);\r\n    const playbackTimeoutRef = useRef(null);\r\n\r\n    // Voice command handler\r\n    const handleVoiceCommand = useCallback((command, transcript) => {\r\n        const composition = compositionRef.current;\r\n        \r\n        switch (command) {\r\n            case 'ADD_NOTE':\r\n                if (detectionState.sign) {\r\n                    composition.addNote(detectionState.sign);\r\n                    audioPlayer.playUIFeedback(1200, 200);\r\n                    setCompositionState(composition.getCompositionInfo());\r\n                } else {\r\n                    audioPlayer.playUIFeedback(400, 300); // Error sound\r\n                }\r\n                break;\r\n                \r\n            case 'ADD_REST':\r\n                composition.addRest();\r\n                audioPlayer.playUIFeedback(800, 200);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n                \r\n            case 'SET_WHOLE_NOTE':\r\n                composition.setNoteDuration(NOTE_DURATIONS.WHOLE);\r\n                audioPlayer.playUIFeedback(1000);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n            case 'SET_HALF_NOTE':\r\n                composition.setNoteDuration(NOTE_DURATIONS.HALF);\r\n                audioPlayer.playUIFeedback(900);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n            case 'SET_QUARTER_NOTE':\r\n                composition.setNoteDuration(NOTE_DURATIONS.QUARTER);\r\n                audioPlayer.playUIFeedback(800);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n            case 'SET_EIGHTH_NOTE':\r\n                composition.setNoteDuration(NOTE_DURATIONS.EIGHTH);\r\n                audioPlayer.playUIFeedback(700);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n                \r\n            case 'OCTAVE_UP':\r\n                composition.octaveUp();\r\n                audioPlayer.playUIFeedback(1200);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n            case 'OCTAVE_DOWN':\r\n                composition.octaveDown();\r\n                audioPlayer.playUIFeedback(600);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n                \r\n            case 'PLAY_COMPOSITION':\r\n                playComposition();\r\n                break;\r\n            case 'STOP_PLAYBACK':\r\n                stopPlayback();\r\n                break;\r\n                \r\n            case 'UNDO':\r\n                composition.undo();\r\n                audioPlayer.playUIFeedback(500);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n            case 'CLEAR_ALL':\r\n                composition.clear();\r\n                audioPlayer.playUIFeedback(400, 300);\r\n                setCompositionState(composition.getCompositionInfo());\r\n                break;\r\n        }\r\n        \r\n        setVoiceState(prev => ({ \r\n            ...prev, \r\n            lastCommand: command,\r\n            lastTranscript: transcript \r\n        }));\r\n    }, [detectionState.sign]);\r\n\r\n    const playComposition = useCallback(() => {\r\n        const sequence = compositionRef.current.getPlaybackSequence();\r\n        if (sequence.length === 0) {\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            return;\r\n        }\r\n\r\n        setIsPlaying(true);\r\n        audioPlayer.playUIFeedback(1400);\r\n\r\n        sequence.forEach(({ note, octave, startTime, duration }) => {\r\n            setTimeout(() => {\r\n                audioPlayer.playNote(note, octave);\r\n                setTimeout(() => {\r\n                    audioPlayer.stopNote();\r\n                }, duration * 0.8);\r\n            }, startTime);\r\n        });\r\n\r\n        const totalDuration = Math.max(...sequence.map(item => item.startTime + item.duration));\r\n        playbackTimeoutRef.current = setTimeout(() => {\r\n            setIsPlaying(false);\r\n        }, totalDuration);\r\n    }, []);\r\n\r\n    const stopPlayback = useCallback(() => {\r\n        if (playbackTimeoutRef.current) {\r\n            clearTimeout(playbackTimeoutRef.current);\r\n        }\r\n        audioPlayer.stopNote();\r\n        setIsPlaying(false);\r\n    }, []);\r\n\r\n    const handleSignDetection = useCallback((recognition) => {\r\n        const currentSign = recognition?.sign;\r\n        const confidence = recognition?.confidence || 0;\r\n\r\n        if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\r\n            if (currentSign === lastNoteRef.current) {\r\n                frameCountRef.current++;\r\n                if (frameCountRef.current >= HOLD_FRAMES) {\r\n                    // Play note for feedback only\r\n                    audioPlayer.playNote(currentSign, compositionRef.current.currentOctave);\r\n                }\r\n            } else {\r\n                frameCountRef.current = 0;\r\n                lastNoteRef.current = currentSign;\r\n                audioPlayer.stopNote();\r\n            }\r\n        } else {\r\n            frameCountRef.current = 0;\r\n            lastNoteRef.current = null;\r\n            audioPlayer.stopNote();\r\n        }\r\n    }, []);\r\n\r\n    const onResults = useCallback((results) => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n        ctx.scale(-1, 1);\r\n        ctx.translate(-canvas.width, 0);\r\n\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                const mirroredLandmarks = landmarks.map(landmark => ({\r\n                    ...landmark,\r\n                    x: 1 - landmark.x\r\n                }));\r\n\r\n                const recognition = recognizeKodalySign(mirroredLandmarks);\r\n                handleSignDetection(recognition);\r\n                setDetectionState({\r\n                    ...recognition,\r\n                    handPresent: true\r\n                });\r\n            }\r\n        } else {\r\n            handleSignDetection(null);\r\n            setDetectionState({\r\n                sign: null,\r\n                confidence: 0,\r\n                debug: null,\r\n                handPresent: false\r\n            });\r\n        }\r\n\r\n        ctx.restore();\r\n    }, [handleSignDetection]);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        handsRef.current.onResults(onResults);\r\n\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start();\r\n        }\r\n\r\n        // Initialize and automatically start voice commands\r\n        voiceManagerRef.current = new VoiceCommandManager(handleVoiceCommand);\r\n        const voiceStatus = voiceManagerRef.current.getStatus();\r\n        setVoiceState(prev => ({ ...prev, isSupported: voiceStatus.isSupported }));\r\n        \r\n        // Auto-start voice recognition if supported\r\n        if (voiceStatus.isSupported) {\r\n            setTimeout(() => {\r\n                const isListening = voiceManagerRef.current.startListening();\r\n                setVoiceState(prev => ({ ...prev, isListening }));\r\n                console.log('Voice recognition auto-started');\r\n            }, 2000); // 2 second delay to ensure everything is ready\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n            if (voiceManagerRef.current) {\r\n                voiceManagerRef.current.stopListening();\r\n            }\r\n            if (playbackTimeoutRef.current) {\r\n                clearTimeout(playbackTimeoutRef.current);\r\n            }\r\n            audioPlayer.stopNote();\r\n        };\r\n    }, [onResults, handleVoiceCommand]);\r\n\r\n    return (\r\n        <div className=\"notation-composer\">\r\n            <div className=\"composer-header\">\r\n                <div className=\"current-note-display\">\r\n                    <h2>Current Note: \r\n                        {detectionState.sign \r\n                            ? ` ${detectionState.sign.toUpperCase()}${compositionState.currentOctave}`\r\n                            : ' (Hold up hand sign)'\r\n                        }\r\n                    </h2>\r\n                    <p>Say \"Add\" to place note on staff</p>\r\n                </div>\r\n                \r\n                <div className=\"voice-status\">\r\n                    <div className={`voice-indicator ${voiceState.isListening ? 'listening' : 'inactive'}`}>\r\n                        {voiceState.isSupported ? (\r\n                            voiceState.isListening ? '🎤 Voice Active' : '🎤 Voice Starting...'\r\n                        ) : (\r\n                            '❌ Voice Not Supported'\r\n                        )}\r\n                    </div>\r\n                    {voiceState.lastCommand && (\r\n                        <div className=\"last-command\">\r\n                            \"{voiceState.lastTranscript}\"\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main-container\">\r\n                <div className=\"camera-canvas-container\">\r\n                    <Webcam\r\n                        ref={webcamRef}\r\n                        style={{ display: 'none' }}\r\n                        width={640}\r\n                        height={480}\r\n                        mirrored={false}\r\n                    />\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={640}\r\n                        height={480}\r\n                    />\r\n                    \r\n                    {detectionState.sign && (\r\n                        <div className={`sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`}>\r\n                            <h3>{detectionState.sign.toUpperCase()}{compositionState.currentOctave}</h3>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {isPlaying && (\r\n                        <div className=\"playback-indicator\">\r\n                            ▶️ Playing\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <SheetMusic \r\n                composition={compositionRef.current} \r\n                currentNoteDuration={compositionState.currentNoteDuration}\r\n            />\r\n\r\n            <div className=\"controls-footer\">\r\n                <button onClick={() => setShowReference(!showReference)}>\r\n                    {showReference ? 'Hide' : 'Show'} Reference Guide\r\n                </button>\r\n                \r\n                <div className=\"quick-actions\">\r\n                    <span>Voice commands: \"Add\" | \"Add rest\" | \"Octave up\" | \"Play\" | \"Undo\" | \"Clear\"</span>\r\n                </div>\r\n            </div>\r\n\r\n            {showReference && <KodalyReference />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotationComposer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AACzC,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AACjD,SAASC,cAAc,EAAEC,aAAa,QAAQ,0BAA0B;AACxE,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,wBAAwB;AACzF,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,oBAAoB,GAAG,IAAI;AACjC,MAAMC,WAAW,GAAG,EAAE;AAEtB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwB,SAAS,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMyB,QAAQ,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM0B,SAAS,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM2B,cAAc,GAAG3B,MAAM,CAAC,IAAIW,gBAAgB,CAAC,CAAC,CAAC;EACrD,MAAMiB,eAAe,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAEpC,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC;IACjD6B,IAAI,EAAE,IAAI;IACVC,UAAU,EAAE,CAAC;IACbC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CACpDyB,cAAc,CAACU,OAAO,CAACC,kBAAkB,CAAC,CAC9C,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC;IACzCuC,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE,IAAI;IACjBC,cAAc,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM+C,WAAW,GAAGjD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMkD,aAAa,GAAGlD,MAAM,CAAC,CAAC,CAAC;EAC/B,MAAMmD,kBAAkB,GAAGnD,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAMoD,kBAAkB,GAAGjD,WAAW,CAAC,CAACkD,OAAO,EAAEC,UAAU,KAAK;IAC5D,MAAMC,WAAW,GAAG5B,cAAc,CAACU,OAAO;IAE1C,QAAQgB,OAAO;MACX,KAAK,UAAU;QACX,IAAIxB,cAAc,CAACE,IAAI,EAAE;UACrBwB,WAAW,CAACC,OAAO,CAAC3B,cAAc,CAACE,IAAI,CAAC;UACxCrB,WAAW,CAAC+C,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC;UACrCrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACzD,CAAC,MAAM;UACH5B,WAAW,CAAC+C,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1C;QACA;MAEJ,KAAK,UAAU;QACXF,WAAW,CAACG,OAAO,CAAC,CAAC;QACrBhD,WAAW,CAAC+C,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;QACpCrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MAEJ,KAAK,gBAAgB;QACjBiB,WAAW,CAACI,eAAe,CAAC/C,cAAc,CAACgD,KAAK,CAAC;QACjDlD,WAAW,CAAC+C,cAAc,CAAC,IAAI,CAAC;QAChCrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MACJ,KAAK,eAAe;QAChBiB,WAAW,CAACI,eAAe,CAAC/C,cAAc,CAACiD,IAAI,CAAC;QAChDnD,WAAW,CAAC+C,cAAc,CAAC,GAAG,CAAC;QAC/BrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MACJ,KAAK,kBAAkB;QACnBiB,WAAW,CAACI,eAAe,CAAC/C,cAAc,CAACkD,OAAO,CAAC;QACnDpD,WAAW,CAAC+C,cAAc,CAAC,GAAG,CAAC;QAC/BrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MACJ,KAAK,iBAAiB;QAClBiB,WAAW,CAACI,eAAe,CAAC/C,cAAc,CAACmD,MAAM,CAAC;QAClDrD,WAAW,CAAC+C,cAAc,CAAC,GAAG,CAAC;QAC/BrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MAEJ,KAAK,WAAW;QACZiB,WAAW,CAACS,QAAQ,CAAC,CAAC;QACtBtD,WAAW,CAAC+C,cAAc,CAAC,IAAI,CAAC;QAChCrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MACJ,KAAK,aAAa;QACdiB,WAAW,CAACU,UAAU,CAAC,CAAC;QACxBvD,WAAW,CAAC+C,cAAc,CAAC,GAAG,CAAC;QAC/BrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MAEJ,KAAK,kBAAkB;QACnB4B,eAAe,CAAC,CAAC;QACjB;MACJ,KAAK,eAAe;QAChBC,YAAY,CAAC,CAAC;QACd;MAEJ,KAAK,MAAM;QACPZ,WAAW,CAACa,IAAI,CAAC,CAAC;QAClB1D,WAAW,CAAC+C,cAAc,CAAC,GAAG,CAAC;QAC/BrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;MACJ,KAAK,WAAW;QACZiB,WAAW,CAACc,KAAK,CAAC,CAAC;QACnB3D,WAAW,CAAC+C,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;QACpCrB,mBAAmB,CAACmB,WAAW,CAACjB,kBAAkB,CAAC,CAAC,CAAC;QACrD;IACR;IAEAE,aAAa,CAAC8B,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP3B,WAAW,EAAEU,OAAO;MACpBT,cAAc,EAAEU;IACpB,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACzB,cAAc,CAACE,IAAI,CAAC,CAAC;EAEzB,MAAMmC,eAAe,GAAG/D,WAAW,CAAC,MAAM;IACtC,MAAMoE,QAAQ,GAAG5C,cAAc,CAACU,OAAO,CAACmC,mBAAmB,CAAC,CAAC;IAC7D,IAAID,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MACvB/D,WAAW,CAAC+C,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;MACpC;IACJ;IAEAT,YAAY,CAAC,IAAI,CAAC;IAClBtC,WAAW,CAAC+C,cAAc,CAAC,IAAI,CAAC;IAEhCc,QAAQ,CAACG,OAAO,CAAC,CAAC;MAAEC,IAAI;MAAEC,MAAM;MAAEC,SAAS;MAAEC;IAAS,CAAC,KAAK;MACxDC,UAAU,CAAC,MAAM;QACbrE,WAAW,CAACsE,QAAQ,CAACL,IAAI,EAAEC,MAAM,CAAC;QAClCG,UAAU,CAAC,MAAM;UACbrE,WAAW,CAACuE,QAAQ,CAAC,CAAC;QAC1B,CAAC,EAAEH,QAAQ,GAAG,GAAG,CAAC;MACtB,CAAC,EAAED,SAAS,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMK,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGb,QAAQ,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACT,SAAS,GAAGS,IAAI,CAACR,QAAQ,CAAC,CAAC;IACvF3B,kBAAkB,CAACd,OAAO,GAAG0C,UAAU,CAAC,MAAM;MAC1C/B,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,EAAEkC,aAAa,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMf,YAAY,GAAGhE,WAAW,CAAC,MAAM;IACnC,IAAIgD,kBAAkB,CAACd,OAAO,EAAE;MAC5BkD,YAAY,CAACpC,kBAAkB,CAACd,OAAO,CAAC;IAC5C;IACA3B,WAAW,CAACuE,QAAQ,CAAC,CAAC;IACtBjC,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwC,mBAAmB,GAAGrF,WAAW,CAAEsF,WAAW,IAAK;IACrD,MAAMC,WAAW,GAAGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE1D,IAAI;IACrC,MAAMC,UAAU,GAAG,CAAAyD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEzD,UAAU,KAAI,CAAC;IAE/C,IAAI0D,WAAW,IAAI1D,UAAU,IAAIb,oBAAoB,EAAE;MACnD,IAAIuE,WAAW,KAAKzC,WAAW,CAACZ,OAAO,EAAE;QACrCa,aAAa,CAACb,OAAO,EAAE;QACvB,IAAIa,aAAa,CAACb,OAAO,IAAIjB,WAAW,EAAE;UACtC;UACAV,WAAW,CAACsE,QAAQ,CAACU,WAAW,EAAE/D,cAAc,CAACU,OAAO,CAACsD,aAAa,CAAC;QAC3E;MACJ,CAAC,MAAM;QACHzC,aAAa,CAACb,OAAO,GAAG,CAAC;QACzBY,WAAW,CAACZ,OAAO,GAAGqD,WAAW;QACjChF,WAAW,CAACuE,QAAQ,CAAC,CAAC;MAC1B;IACJ,CAAC,MAAM;MACH/B,aAAa,CAACb,OAAO,GAAG,CAAC;MACzBY,WAAW,CAACZ,OAAO,GAAG,IAAI;MAC1B3B,WAAW,CAACuE,QAAQ,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,SAAS,GAAGzF,WAAW,CAAE0F,OAAO,IAAK;IACvC,MAAMC,MAAM,GAAGtE,SAAS,CAACa,OAAO;IAChC,IAAI,CAACyD,MAAM,EAAE;IAEb,MAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IAEnCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;IAChDJ,GAAG,CAACK,IAAI,CAAC,CAAC;IACVL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAChBN,GAAG,CAACO,SAAS,CAAC,CAACR,MAAM,CAACI,KAAK,EAAE,CAAC,CAAC;IAE/B,IAAIL,OAAO,CAACU,KAAK,EAAE;MACfR,GAAG,CAACS,SAAS,CAACX,OAAO,CAACU,KAAK,EAAE,CAAC,EAAE,CAAC,EAAET,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;IACnE;IAEA,IAAIN,OAAO,CAACY,kBAAkB,IAAIZ,OAAO,CAACY,kBAAkB,CAAChC,MAAM,GAAG,CAAC,EAAE;MACrE,KAAK,MAAMiC,SAAS,IAAIb,OAAO,CAACY,kBAAkB,EAAE;QAChDlG,cAAc,CAACwF,GAAG,EAAEW,SAAS,EAAErG,KAAK,CAACsG,gBAAgB,EAAE;UACnDC,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE;QACf,CAAC,CAAC;QACFrG,aAAa,CAACuF,GAAG,EAAEW,SAAS,EAAE;UAC1BE,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE;QACf,CAAC,CAAC;QAEF,MAAMC,iBAAiB,GAAGJ,SAAS,CAACrB,GAAG,CAAC0B,QAAQ,KAAK;UACjD,GAAGA,QAAQ;UACXC,CAAC,EAAE,CAAC,GAAGD,QAAQ,CAACC;QACpB,CAAC,CAAC,CAAC;QAEH,MAAMvB,WAAW,GAAGhF,mBAAmB,CAACqG,iBAAiB,CAAC;QAC1DtB,mBAAmB,CAACC,WAAW,CAAC;QAChC3D,iBAAiB,CAAC;UACd,GAAG2D,WAAW;UACdvD,WAAW,EAAE;QACjB,CAAC,CAAC;MACN;IACJ,CAAC,MAAM;MACHsD,mBAAmB,CAAC,IAAI,CAAC;MACzB1D,iBAAiB,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,CAAC;QACbC,KAAK,EAAE,IAAI;QACXC,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;IAEA6D,GAAG,CAACkB,OAAO,CAAC,CAAC;EACjB,CAAC,EAAE,CAACzB,mBAAmB,CAAC,CAAC;EAEzBvF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACsB,SAAS,CAACc,OAAO,EAAE;IAExBZ,QAAQ,CAACY,OAAO,GAAG,IAAIhC,KAAK,CAAC6G,KAAK,CAAC;MAC/BC,UAAU,EAAGC,IAAI,IAAK;QAClB,OAAO,iDAAiDA,IAAI,EAAE;MAClE;IACJ,CAAC,CAAC;IAEF3F,QAAQ,CAACY,OAAO,CAACgF,UAAU,CAAC;MACxBC,WAAW,EAAE,CAAC;MACdC,eAAe,EAAE,CAAC;MAClBC,sBAAsB,EAAE,GAAG;MAC3BC,qBAAqB,EAAE;IAC3B,CAAC,CAAC;IAEFhG,QAAQ,CAACY,OAAO,CAACuD,SAAS,CAACA,SAAS,CAAC;IAErC,IAAIrE,SAAS,CAACc,OAAO,EAAE;MACnBX,SAAS,CAACW,OAAO,GAAG,IAAI/B,MAAM,CAACoH,MAAM,CAACnG,SAAS,CAACc,OAAO,CAACsF,KAAK,EAAE;QAC3DC,OAAO,EAAE,MAAAA,CAAA,KAAY;UACjB,IAAIrG,SAAS,CAACc,OAAO,IAAIZ,QAAQ,CAACY,OAAO,EAAE;YACvC,MAAMZ,QAAQ,CAACY,OAAO,CAACwF,IAAI,CAAC;cACxBtB,KAAK,EAAEhF,SAAS,CAACc,OAAO,CAACsF;YAC7B,CAAC,CAAC;UACN;QACJ,CAAC;QACDzB,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;MACZ,CAAC,CAAC;MACFzE,SAAS,CAACW,OAAO,CAACyF,KAAK,CAAC,CAAC;IAC7B;;IAEA;IACAlG,eAAe,CAACS,OAAO,GAAG,IAAIvB,mBAAmB,CAACsC,kBAAkB,CAAC;IACrE,MAAM2E,WAAW,GAAGnG,eAAe,CAACS,OAAO,CAAC2F,SAAS,CAAC,CAAC;IACvDxF,aAAa,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE5B,WAAW,EAAEqF,WAAW,CAACrF;IAAY,CAAC,CAAC,CAAC;;IAE1E;IACA,IAAIqF,WAAW,CAACrF,WAAW,EAAE;MACzBqC,UAAU,CAAC,MAAM;QACb,MAAMtC,WAAW,GAAGb,eAAe,CAACS,OAAO,CAAC4F,cAAc,CAAC,CAAC;QAC5DzF,aAAa,CAAC8B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE7B;QAAY,CAAC,CAAC,CAAC;QACjDyF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd;IAEA,OAAO,MAAM;MACT,IAAIzG,SAAS,CAACW,OAAO,EAAE;QACnBX,SAAS,CAACW,OAAO,CAAC+F,IAAI,CAAC,CAAC;MAC5B;MACA,IAAI3G,QAAQ,CAACY,OAAO,EAAE;QAClBZ,QAAQ,CAACY,OAAO,CAACgG,KAAK,CAAC,CAAC;MAC5B;MACA,IAAIzG,eAAe,CAACS,OAAO,EAAE;QACzBT,eAAe,CAACS,OAAO,CAACiG,aAAa,CAAC,CAAC;MAC3C;MACA,IAAInF,kBAAkB,CAACd,OAAO,EAAE;QAC5BkD,YAAY,CAACpC,kBAAkB,CAACd,OAAO,CAAC;MAC5C;MACA3B,WAAW,CAACuE,QAAQ,CAAC,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,CAACW,SAAS,EAAExC,kBAAkB,CAAC,CAAC;EAEnC,oBACIlC,OAAA;IAAKqH,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BtH,OAAA;MAAKqH,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtH,OAAA;QAAKqH,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjCtH,OAAA;UAAAsH,QAAA,GAAI,eACA,EAAC3G,cAAc,CAACE,IAAI,GACd,IAAIF,cAAc,CAACE,IAAI,CAAC0G,WAAW,CAAC,CAAC,GAAGtG,gBAAgB,CAACwD,aAAa,EAAE,GACxE,sBAAsB;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5B,CAAC,eACL3H,OAAA;UAAAsH,QAAA,EAAG;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAEN3H,OAAA;QAAKqH,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBtH,OAAA;UAAKqH,SAAS,EAAE,mBAAmBhG,UAAU,CAACE,WAAW,GAAG,WAAW,GAAG,UAAU,EAAG;UAAA+F,QAAA,EAClFjG,UAAU,CAACG,WAAW,GACnBH,UAAU,CAACE,WAAW,GAAG,iBAAiB,GAAG,sBAAsB,GAEnE;QACH;UAAAiG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EACLtG,UAAU,CAACI,WAAW,iBACnBzB,OAAA;UAAKqH,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,IACzB,EAACjG,UAAU,CAACK,cAAc,EAAC,IAChC;QAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN3H,OAAA;MAAKqH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BtH,OAAA;QAAKqH,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpCtH,OAAA,CAACd,MAAM;UACH0I,GAAG,EAAEvH,SAAU;UACfwH,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAE;UAC3B9C,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZ8C,QAAQ,EAAE;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACF3H,OAAA;UACI4H,GAAG,EAAEtH,SAAU;UACf0E,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE;QAAI;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,EAEDhH,cAAc,CAACE,IAAI,iBAChBb,OAAA;UAAKqH,SAAS,EAAE,kBAAkBrF,aAAa,CAACb,OAAO,IAAIjB,WAAW,GAAG,SAAS,GAAG,EAAE,EAAG;UAAAoH,QAAA,eACtFtH,OAAA;YAAAsH,QAAA,GAAK3G,cAAc,CAACE,IAAI,CAAC0G,WAAW,CAAC,CAAC,EAAEtG,gBAAgB,CAACwD,aAAa;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CACR,EAEA9F,SAAS,iBACN7B,OAAA;UAAKqH,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAEpC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN3H,OAAA,CAACH,UAAU;MACPwC,WAAW,EAAE5B,cAAc,CAACU,OAAQ;MACpC6G,mBAAmB,EAAE/G,gBAAgB,CAAC+G;IAAoB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eAEF3H,OAAA;MAAKqH,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtH,OAAA;QAAQiI,OAAO,EAAEA,CAAA,KAAMrG,gBAAgB,CAAC,CAACD,aAAa,CAAE;QAAA2F,QAAA,GACnD3F,aAAa,GAAG,MAAM,GAAG,MAAM,EAAC,kBACrC;MAAA;QAAA6F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET3H,OAAA;QAAKqH,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1BtH,OAAA;UAAAsH,QAAA,EAAM;QAA4E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELhG,aAAa,iBAAI3B,OAAA,CAACF,eAAe;MAAA0H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd;AAACvH,EAAA,CAvWQD,gBAAgB;AAAA+H,EAAA,GAAhB/H,gBAAgB;AAyWzB,eAAeA,gBAAgB;AAAC,IAAA+H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}