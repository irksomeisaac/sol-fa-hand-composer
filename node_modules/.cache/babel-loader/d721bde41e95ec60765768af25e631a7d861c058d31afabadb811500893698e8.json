{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign } from '../utils/kodalySignsDB_improved';\nimport { audioPlayer } from '../utils/audioUtils';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CONFIDENCE_THRESHOLD = 0.85;\nconst HOLD_FRAMES = 10;\nfunction HandDetection() {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const [detectionState, setDetectionState] = useState({\n    sign: null,\n    confidence: 0,\n    debug: null,\n    handPresent: false\n  });\n  const lastSignRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const handleSignDetection = useCallback(recognition => {\n    const currentSign = recognition === null || recognition === void 0 ? void 0 : recognition.sign;\n    const confidence = (recognition === null || recognition === void 0 ? void 0 : recognition.confidence) || 0;\n    if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\n      if (currentSign === lastSignRef.current) {\n        frameCountRef.current++;\n        if (frameCountRef.current >= HOLD_FRAMES) {\n          audioPlayer.playNote(currentSign);\n        }\n      } else {\n        frameCountRef.current = 0;\n        lastSignRef.current = currentSign;\n        audioPlayer.stopNote();\n      }\n    } else {\n      frameCountRef.current = 0;\n      lastSignRef.current = null;\n      audioPlayer.stopNote();\n    }\n  }, []);\n  const onResults = useCallback(results => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n        const mirroredLandmarks = landmarks.map(landmark => ({\n          ...landmark,\n          x: 1 - landmark.x\n        }));\n        const recognition = recognizeKodalySign(mirroredLandmarks);\n        handleSignDetection(recognition);\n        setDetectionState({\n          ...recognition,\n          handPresent: true\n        });\n      }\n    } else {\n      handleSignDetection(null);\n      setDetectionState({\n        sign: null,\n        confidence: 0,\n        debug: null,\n        handPresent: false\n      });\n    }\n    ctx.restore();\n  }, [handleSignDetection]);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7\n    });\n    handsRef.current.onResults(onResults);\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start();\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n      audioPlayer.stopNote();\n    };\n  }, [onResults]);\n  const renderDebugInfo = useCallback(() => {\n    if (!detectionState.handPresent) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message\",\n          children: \"No Hand Detected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-data\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for hand to appear in frame...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: detectionState.sign ? `Detected: ${detectionState.sign.toUpperCase()} (${Math.round(detectionState.confidence * 100)}% confident)` : \"Hand Detected - No Sign Recognized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hand Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), detectionState.debug && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Finger Extensions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), Object.entries(detectionState.debug.extensions).map(([finger, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"debug-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [finger, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"debug-bar\",\n                style: {\n                  width: `${value * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(value * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this)]\n            }, finger, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Hand Direction:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Vertical Angle: \", Math.round(detectionState.debug.handDirection.verticalAngle), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Direction: \", detectionState.debug.handDirection.isPointingUp ? \"Up\" : detectionState.debug.handDirection.isPointingDown ? \"Down\" : detectionState.debug.handDirection.isPointingForward ? \"Forward\" : detectionState.debug.handDirection.isHorizontal ? \"Horizontal\" : \"Other\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Palm Orientation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: detectionState.debug.palmOrientation.isDown ? \"Down\" : detectionState.debug.palmOrientation.isUp ? \"Up\" : detectionState.debug.palmOrientation.isSide ? \"Side\" : \"Neutral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), detectionState.sign && frameCountRef.current >= HOLD_FRAMES && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section playing\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Playing Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: detectionState.sign.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }, [detectionState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-canvas-container\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          style: {\n            display: 'none'\n          },\n          width: 640,\n          height: 480,\n          mirrored: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), detectionState.sign && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: detectionState.sign.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), renderDebugInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n_s(HandDetection, \"a+7lkFpAi2XWxS/B9UncSpe1P30=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","audioPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","CONFIDENCE_THRESHOLD","HOLD_FRAMES","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","detectionState","setDetectionState","sign","confidence","debug","handPresent","lastSignRef","frameCountRef","handleSignDetection","recognition","currentSign","current","playNote","stopNote","onResults","results","canvas","ctx","getContext","clearRect","width","height","save","scale","translate","image","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","mirroredLandmarks","map","landmark","x","restore","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","Camera","video","onFrame","send","start","stop","close","renderDebugInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","Math","round","Object","entries","extensions","finger","value","style","handDirection","verticalAngle","isPointingUp","isPointingDown","isPointingForward","isHorizontal","palmOrientation","isDown","isUp","isSide","ref","display","mirrored","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign } from '../utils/kodalySignsDB_improved';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\nimport './HandDetection.css';\r\n\r\nconst CONFIDENCE_THRESHOLD = 0.85;\r\nconst HOLD_FRAMES = 10;\r\n\r\nfunction HandDetection() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const [detectionState, setDetectionState] = useState({\r\n        sign: null,\r\n        confidence: 0,\r\n        debug: null,\r\n        handPresent: false\r\n    });\r\n    \r\n    const lastSignRef = useRef(null);\r\n    const frameCountRef = useRef(0);\r\n\r\n    const handleSignDetection = useCallback((recognition) => {\r\n        const currentSign = recognition?.sign;\r\n        const confidence = recognition?.confidence || 0;\r\n\r\n        if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\r\n            if (currentSign === lastSignRef.current) {\r\n                frameCountRef.current++;\r\n                if (frameCountRef.current >= HOLD_FRAMES) {\r\n                    audioPlayer.playNote(currentSign);\r\n                }\r\n            } else {\r\n                frameCountRef.current = 0;\r\n                lastSignRef.current = currentSign;\r\n                audioPlayer.stopNote();\r\n            }\r\n        } else {\r\n            frameCountRef.current = 0;\r\n            lastSignRef.current = null;\r\n            audioPlayer.stopNote();\r\n        }\r\n    }, []);\r\n\r\n    const onResults = useCallback((results) => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n        ctx.scale(-1, 1);\r\n        ctx.translate(-canvas.width, 0);\r\n\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                const mirroredLandmarks = landmarks.map(landmark => ({\r\n                    ...landmark,\r\n                    x: 1 - landmark.x\r\n                }));\r\n\r\n                const recognition = recognizeKodalySign(mirroredLandmarks);\r\n                handleSignDetection(recognition);\r\n                setDetectionState({\r\n                    ...recognition,\r\n                    handPresent: true\r\n                });\r\n            }\r\n        } else {\r\n            handleSignDetection(null);\r\n            setDetectionState({\r\n                sign: null,\r\n                confidence: 0,\r\n                debug: null,\r\n                handPresent: false\r\n            });\r\n        }\r\n\r\n        ctx.restore();\r\n    }, [handleSignDetection]);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        handsRef.current.onResults(onResults);\r\n\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start();\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n            audioPlayer.stopNote();\r\n        };\r\n    }, [onResults]);\r\n\r\n    const renderDebugInfo = useCallback(() => {\r\n        if (!detectionState.handPresent) {\r\n            return (\r\n                <div className=\"debug-panel\">\r\n                    <div className=\"status-message\">No Hand Detected</div>\r\n                    <div className=\"debug-data\">\r\n                        <p>Waiting for hand to appear in frame...</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"debug-panel\">\r\n                <div className=\"status-message\">\r\n                    {detectionState.sign \r\n                        ? `Detected: ${detectionState.sign.toUpperCase()} (${Math.round(detectionState.confidence * 100)}% confident)`\r\n                        : \"Hand Detected - No Sign Recognized\"}\r\n                </div>\r\n                <div className=\"debug-data\">\r\n                    <h3>Hand Analysis:</h3>\r\n                    {detectionState.debug && (\r\n                        <>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Finger Extensions:</h4>\r\n                                {Object.entries(detectionState.debug.extensions).map(([finger, value]) => (\r\n                                    <div key={finger} className=\"debug-item\">\r\n                                        <span>{finger}:</span>\r\n                                        <div className=\"debug-bar\" style={{width: `${value * 100}%`}}></div>\r\n                                        <span>{Math.round(value * 100)}%</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Hand Direction:</h4>\r\n                                <p>Vertical Angle: {Math.round(detectionState.debug.handDirection.verticalAngle)}°</p>\r\n                                <p>Direction: {\r\n                                    detectionState.debug.handDirection.isPointingUp ? \"Up\" :\r\n                                    detectionState.debug.handDirection.isPointingDown ? \"Down\" :\r\n                                    detectionState.debug.handDirection.isPointingForward ? \"Forward\" :\r\n                                    detectionState.debug.handDirection.isHorizontal ? \"Horizontal\" : \"Other\"\r\n                                }</p>\r\n                            </div>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Palm Orientation:</h4>\r\n                                <p>\r\n                                    {detectionState.debug.palmOrientation.isDown ? \"Down\" : \r\n                                     detectionState.debug.palmOrientation.isUp ? \"Up\" : \r\n                                     detectionState.debug.palmOrientation.isSide ? \"Side\" : \"Neutral\"}\r\n                                </p>\r\n                            </div>\r\n                            {detectionState.sign && frameCountRef.current >= HOLD_FRAMES && (\r\n                                <div className=\"debug-section playing\">\r\n                                    <h4>Playing Note:</h4>\r\n                                    <p>{detectionState.sign.toUpperCase()}</p>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }, [detectionState]);\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"main-container\">\r\n                <div className=\"camera-canvas-container\">\r\n                    <Webcam\r\n                        ref={webcamRef}\r\n                        style={{ display: 'none' }}\r\n                        width={640}\r\n                        height={480}\r\n                        mirrored={false}\r\n                    />\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={640}\r\n                        height={480}\r\n                    />\r\n                    {detectionState.sign && (\r\n                        <div className={`sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`}>\r\n                            <h2>{detectionState.sign.toUpperCase()}</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {renderDebugInfo()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HandDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}