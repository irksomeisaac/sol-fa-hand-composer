{"ast":null,"code":"// Composition recording and playback manager\nexport class CompositionManager {\n  constructor() {\n    this.composition = [];\n    this.isRecording = false;\n    this.isPlaying = false;\n    this.currentOctave = 4; // Default octave\n    this.tempo = 120; // BPM\n    this.playbackIndex = 0;\n    this.playbackInterval = null;\n  }\n\n  // Recording functions\n  startRecording() {\n    this.isRecording = true;\n    this.composition = [];\n    console.log('Recording started');\n  }\n  stopRecording() {\n    this.isRecording = false;\n    console.log('Recording stopped. Composition:', this.composition);\n  }\n  toggleRecording() {\n    if (this.isRecording) {\n      this.stopRecording();\n    } else {\n      this.startRecording();\n    }\n    return this.isRecording;\n  }\n  addNote(note, timestamp = Date.now()) {\n    if (this.isRecording && note) {\n      const duration = this.composition.length > 0 ? timestamp - this.composition[this.composition.length - 1].timestamp : 0;\n      this.composition.push({\n        note,\n        octave: this.currentOctave,\n        timestamp,\n        duration\n      });\n    }\n  }\n\n  // Octave controls\n  octaveUp() {\n    this.currentOctave = Math.min(this.currentOctave + 1, 7);\n    console.log('Octave up:', this.currentOctave);\n    return this.currentOctave;\n  }\n  octaveDown() {\n    this.currentOctave = Math.max(this.currentOctave - 1, 2);\n    console.log('Octave down:', this.currentOctave);\n    return this.currentOctave;\n  }\n\n  // Playback functions\n  startPlayback(audioPlayer) {\n    if (this.composition.length === 0) return;\n    this.isPlaying = true;\n    this.playbackIndex = 0;\n    const playNext = () => {\n      if (this.playbackIndex >= this.composition.length || !this.isPlaying) {\n        this.stopPlayback();\n        return;\n      }\n      const note = this.composition[this.playbackIndex];\n      audioPlayer.playNoteInOctave(note.note, note.octave);\n      this.playbackIndex++;\n\n      // Schedule next note based on duration or default timing\n      const nextDelay = note.duration > 0 ? note.duration : 500;\n      this.playbackInterval = setTimeout(playNext, nextDelay);\n    };\n    playNext();\n  }\n  stopPlayback() {\n    this.isPlaying = false;\n    if (this.playbackInterval) {\n      clearTimeout(this.playbackInterval);\n      this.playbackInterval = null;\n    }\n    console.log('Playback stopped');\n  }\n  togglePlayback(audioPlayer) {\n    if (this.isPlaying) {\n      this.stopPlayback();\n    } else {\n      this.startPlayback(audioPlayer);\n    }\n    return this.isPlaying;\n  }\n\n  // Utility functions\n  clearComposition() {\n    this.composition = [];\n    this.stopPlayback();\n    this.stopRecording();\n    console.log('Composition cleared');\n  }\n  getComposition() {\n    return this.composition;\n  }\n  getStatus() {\n    return {\n      isRecording: this.isRecording,\n      isPlaying: this.isPlaying,\n      currentOctave: this.currentOctave,\n      tempo: this.tempo,\n      noteCount: this.composition.length\n    };\n  }\n}","map":{"version":3,"names":["CompositionManager","constructor","composition","isRecording","isPlaying","currentOctave","tempo","playbackIndex","playbackInterval","startRecording","console","log","stopRecording","toggleRecording","addNote","note","timestamp","Date","now","duration","length","push","octave","octaveUp","Math","min","octaveDown","max","startPlayback","audioPlayer","playNext","stopPlayback","playNoteInOctave","nextDelay","setTimeout","clearTimeout","togglePlayback","clearComposition","getComposition","getStatus","noteCount"],"sources":["C:/Users/user/sol-fa-app/src/utils/compositionManager.js"],"sourcesContent":["// Composition recording and playback manager\r\nexport class CompositionManager {\r\n    constructor() {\r\n        this.composition = [];\r\n        this.isRecording = false;\r\n        this.isPlaying = false;\r\n        this.currentOctave = 4; // Default octave\r\n        this.tempo = 120; // BPM\r\n        this.playbackIndex = 0;\r\n        this.playbackInterval = null;\r\n    }\r\n\r\n    // Recording functions\r\n    startRecording() {\r\n        this.isRecording = true;\r\n        this.composition = [];\r\n        console.log('Recording started');\r\n    }\r\n\r\n    stopRecording() {\r\n        this.isRecording = false;\r\n        console.log('Recording stopped. Composition:', this.composition);\r\n    }\r\n\r\n    toggleRecording() {\r\n        if (this.isRecording) {\r\n            this.stopRecording();\r\n        } else {\r\n            this.startRecording();\r\n        }\r\n        return this.isRecording;\r\n    }\r\n\r\n    addNote(note, timestamp = Date.now()) {\r\n        if (this.isRecording && note) {\r\n            const duration = this.composition.length > 0 ? \r\n                timestamp - this.composition[this.composition.length - 1].timestamp : 0;\r\n            \r\n            this.composition.push({\r\n                note,\r\n                octave: this.currentOctave,\r\n                timestamp,\r\n                duration\r\n            });\r\n        }\r\n    }\r\n\r\n    // Octave controls\r\n    octaveUp() {\r\n        this.currentOctave = Math.min(this.currentOctave + 1, 7);\r\n        console.log('Octave up:', this.currentOctave);\r\n        return this.currentOctave;\r\n    }\r\n\r\n    octaveDown() {\r\n        this.currentOctave = Math.max(this.currentOctave - 1, 2);\r\n        console.log('Octave down:', this.currentOctave);\r\n        return this.currentOctave;\r\n    }\r\n\r\n    // Playback functions\r\n    startPlayback(audioPlayer) {\r\n        if (this.composition.length === 0) return;\r\n        \r\n        this.isPlaying = true;\r\n        this.playbackIndex = 0;\r\n        \r\n        const playNext = () => {\r\n            if (this.playbackIndex >= this.composition.length || !this.isPlaying) {\r\n                this.stopPlayback();\r\n                return;\r\n            }\r\n\r\n            const note = this.composition[this.playbackIndex];\r\n            audioPlayer.playNoteInOctave(note.note, note.octave);\r\n            \r\n            this.playbackIndex++;\r\n            \r\n            // Schedule next note based on duration or default timing\r\n            const nextDelay = note.duration > 0 ? note.duration : 500;\r\n            this.playbackInterval = setTimeout(playNext, nextDelay);\r\n        };\r\n\r\n        playNext();\r\n    }\r\n\r\n    stopPlayback() {\r\n        this.isPlaying = false;\r\n        if (this.playbackInterval) {\r\n            clearTimeout(this.playbackInterval);\r\n            this.playbackInterval = null;\r\n        }\r\n        console.log('Playback stopped');\r\n    }\r\n\r\n    togglePlayback(audioPlayer) {\r\n        if (this.isPlaying) {\r\n            this.stopPlayback();\r\n        } else {\r\n            this.startPlayback(audioPlayer);\r\n        }\r\n        return this.isPlaying;\r\n    }\r\n\r\n    // Utility functions\r\n    clearComposition() {\r\n        this.composition = [];\r\n        this.stopPlayback();\r\n        this.stopRecording();\r\n        console.log('Composition cleared');\r\n    }\r\n\r\n    getComposition() {\r\n        return this.composition;\r\n    }\r\n\r\n    getStatus() {\r\n        return {\r\n            isRecording: this.isRecording,\r\n            isPlaying: this.isPlaying,\r\n            currentOctave: this.currentOctave,\r\n            tempo: this.tempo,\r\n            noteCount: this.composition.length\r\n        };\r\n    }\r\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}