{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\SimpleVoiceController.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { audioPlayer } from '../utils/audioUtils';\nimport SimpleSheetMusic from './SimpleSheetMusic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimpleVoiceController({\n  currentNote\n}) {\n  _s();\n  const [composition, setComposition] = useState({\n    notes: [],\n    currentOctave: 4\n  });\n  const [voiceState, setVoiceState] = useState({\n    isActive: false,\n    lastCommand: null,\n    isSupported: 'webkitSpeechRecognition' in window,\n    isInitialized: false\n  });\n  const recognitionRef = useRef(null);\n  const isStartingRef = useRef(false);\n  const handleVoiceCommand = transcript => {\n    console.log('Voice command received:', transcript);\n    if (transcript.includes('add') && currentNote) {\n      const newNote = {\n        note: currentNote,\n        octave: composition.currentOctave,\n        timestamp: Date.now()\n      };\n      setComposition(prev => ({\n        ...prev,\n        notes: [...prev.notes, newNote]\n      }));\n      audioPlayer.playUIFeedback(1200, 200);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}`\n      }));\n    } else if (transcript.includes('octave up') || transcript.includes('higher')) {\n      setComposition(prev => ({\n        ...prev,\n        currentOctave: Math.min(prev.currentOctave + 1, 7)\n      }));\n      audioPlayer.playUIFeedback(1000);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave ${composition.currentOctave + 1}`\n      }));\n    } else if (transcript.includes('octave down') || transcript.includes('lower')) {\n      setComposition(prev => ({\n        ...prev,\n        currentOctave: Math.max(prev.currentOctave - 1, 2)\n      }));\n      audioPlayer.playUIFeedback(600);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave ${composition.currentOctave - 1}`\n      }));\n    } else if (transcript.includes('play')) {\n      playComposition();\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Playing composition'\n      }));\n    } else if (transcript.includes('clear')) {\n      setComposition(prev => ({\n        ...prev,\n        notes: []\n      }));\n      audioPlayer.playUIFeedback(400, 300);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Composition cleared'\n      }));\n    } else if (transcript.includes('undo')) {\n      setComposition(prev => ({\n        ...prev,\n        notes: prev.notes.slice(0, -1)\n      }));\n      audioPlayer.playUIFeedback(500);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Last note removed'\n      }));\n    }\n  };\n  const playComposition = () => {\n    if (composition.notes.length === 0) {\n      audioPlayer.playUIFeedback(400, 300);\n      return;\n    }\n    composition.notes.forEach((noteItem, index) => {\n      setTimeout(() => {\n        audioPlayer.playNote(noteItem.note, noteItem.octave);\n        setTimeout(() => audioPlayer.stopNote(), 450);\n      }, index * 500);\n    });\n  };\n  const startListening = () => {\n    if (!voiceState.isSupported || isStartingRef.current) return;\n    isStartingRef.current = true;\n    try {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      const recognition = new window.webkitSpeechRecognition();\n      recognitionRef.current = recognition;\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setVoiceState(prev => ({\n          ...prev,\n          isActive: true\n        }));\n        isStartingRef.current = false;\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript.toLowerCase().trim();\n        handleVoiceCommand(transcript);\n      };\n      recognition.onend = () => {\n        setVoiceState(prev => ({\n          ...prev,\n          isActive: false\n        }));\n        isStartingRef.current = false;\n        // Auto-restart after a short delay\n        setTimeout(startListening, 1000);\n      };\n      recognition.onerror = event => {\n        console.log('Voice error:', event.error);\n        setVoiceState(prev => ({\n          ...prev,\n          isActive: false\n        }));\n        isStartingRef.current = false;\n\n        // Only restart if not a permission error\n        if (event.error !== 'not-allowed') {\n          setTimeout(startListening, 2000);\n        }\n      };\n      recognition.start();\n    } catch (error) {\n      console.error('Failed to start voice recognition:', error);\n      isStartingRef.current = false;\n      setTimeout(startListening, 3000);\n    }\n  };\n  useEffect(() => {\n    if (voiceState.isSupported && !voiceState.isInitialized) {\n      setVoiceState(prev => ({\n        ...prev,\n        isInitialized: true\n      }));\n\n      // Start voice recognition after component mounts\n      setTimeout(() => {\n        startListening();\n      }, 2000);\n    }\n    return () => {\n      if (recognitionRef.current) {\n        try {\n          recognitionRef.current.stop();\n        } catch (e) {}\n      }\n    };\n  }, [voiceState.isSupported, voiceState.isInitialized]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-voice-controller\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFA4 Voice Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `voice-indicator ${voiceState.isActive ? 'listening' : 'waiting'}`,\n          children: voiceState.isSupported ? voiceState.isActive ? 'üé§ Listening...' : 'üé§ Ready - Speak Command' : '‚ùå Voice Not Supported'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), voiceState.lastCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-command\",\n        children: [\"\\u2713 \", voiceState.lastCommand]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 24\n          }, this), \" \", currentNote ? `${currentNote.toUpperCase()}${composition.currentOctave}` : 'None detected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Octave:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 24\n          }, this), \" \", composition.currentOctave]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notes Added:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 24\n          }, this), \" \", composition.notes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commands-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Say These Commands:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Add\\\" - Add current note to staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Octave up\\\" - Increase octave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Octave down\\\" - Decrease octave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Play\\\" - Play composition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Undo\\\" - Remove last note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Clear\\\" - Clear all notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleSheetMusic, {\n      notes: composition.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(SimpleVoiceController, \"n53B4KJG4psjOj/FUVODYPjP3Kk=\");\n_c = SimpleVoiceController;\nexport default SimpleVoiceController;\nvar _c;\n$RefreshReg$(_c, \"SimpleVoiceController\");","map":{"version":3,"names":["React","useRef","useState","useEffect","audioPlayer","SimpleSheetMusic","jsxDEV","_jsxDEV","SimpleVoiceController","currentNote","_s","composition","setComposition","notes","currentOctave","voiceState","setVoiceState","isActive","lastCommand","isSupported","window","isInitialized","recognitionRef","isStartingRef","handleVoiceCommand","transcript","console","log","includes","newNote","note","octave","timestamp","Date","now","prev","playUIFeedback","toUpperCase","Math","min","max","playComposition","slice","length","forEach","noteItem","index","setTimeout","playNote","stopNote","startListening","current","stop","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","results","toLowerCase","trim","onend","onerror","error","start","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/SimpleVoiceController.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\nimport SimpleSheetMusic from './SimpleSheetMusic';\r\n\r\nfunction SimpleVoiceController({ currentNote }) {\r\n    const [composition, setComposition] = useState({\r\n        notes: [],\r\n        currentOctave: 4\r\n    });\r\n    \r\n    const [voiceState, setVoiceState] = useState({\r\n        isActive: false,\r\n        lastCommand: null,\r\n        isSupported: 'webkitSpeechRecognition' in window,\r\n        isInitialized: false\r\n    });\r\n    \r\n    const recognitionRef = useRef(null);\r\n    const isStartingRef = useRef(false);\r\n\r\n    const handleVoiceCommand = (transcript) => {\r\n        console.log('Voice command received:', transcript);\r\n        \r\n        if (transcript.includes('add') && currentNote) {\r\n            const newNote = {\r\n                note: currentNote,\r\n                octave: composition.currentOctave,\r\n                timestamp: Date.now()\r\n            };\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                notes: [...prev.notes, newNote]\r\n            }));\r\n            audioPlayer.playUIFeedback(1200, 200);\r\n            setVoiceState(prev => ({ \r\n                ...prev, \r\n                lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}` \r\n            }));\r\n        }\r\n        else if (transcript.includes('octave up') || transcript.includes('higher')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                currentOctave: Math.min(prev.currentOctave + 1, 7)\r\n            }));\r\n            audioPlayer.playUIFeedback(1000);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave ${composition.currentOctave + 1}` }));\r\n        }\r\n        else if (transcript.includes('octave down') || transcript.includes('lower')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                currentOctave: Math.max(prev.currentOctave - 1, 2)\r\n            }));\r\n            audioPlayer.playUIFeedback(600);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave ${composition.currentOctave - 1}` }));\r\n        }\r\n        else if (transcript.includes('play')) {\r\n            playComposition();\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Playing composition' }));\r\n        }\r\n        else if (transcript.includes('clear')) {\r\n            setComposition(prev => ({ ...prev, notes: [] }));\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Composition cleared' }));\r\n        }\r\n        else if (transcript.includes('undo')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                notes: prev.notes.slice(0, -1)\r\n            }));\r\n            audioPlayer.playUIFeedback(500);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Last note removed' }));\r\n        }\r\n    };\r\n\r\n    const playComposition = () => {\r\n        if (composition.notes.length === 0) {\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            return;\r\n        }\r\n\r\n        composition.notes.forEach((noteItem, index) => {\r\n            setTimeout(() => {\r\n                audioPlayer.playNote(noteItem.note, noteItem.octave);\r\n                setTimeout(() => audioPlayer.stopNote(), 450);\r\n            }, index * 500);\r\n        });\r\n    };\r\n\r\n    const startListening = () => {\r\n        if (!voiceState.isSupported || isStartingRef.current) return;\r\n        \r\n        isStartingRef.current = true;\r\n        \r\n        try {\r\n            if (recognitionRef.current) {\r\n                recognitionRef.current.stop();\r\n            }\r\n            \r\n            const recognition = new window.webkitSpeechRecognition();\r\n            recognitionRef.current = recognition;\r\n            \r\n            recognition.continuous = false;\r\n            recognition.interimResults = false;\r\n            recognition.lang = 'en-US';\r\n            \r\n            recognition.onstart = () => {\r\n                setVoiceState(prev => ({ ...prev, isActive: true }));\r\n                isStartingRef.current = false;\r\n            };\r\n            \r\n            recognition.onresult = (event) => {\r\n                const transcript = event.results[0][0].transcript.toLowerCase().trim();\r\n                handleVoiceCommand(transcript);\r\n            };\r\n            \r\n            recognition.onend = () => {\r\n                setVoiceState(prev => ({ ...prev, isActive: false }));\r\n                isStartingRef.current = false;\r\n                // Auto-restart after a short delay\r\n                setTimeout(startListening, 1000);\r\n            };\r\n            \r\n            recognition.onerror = (event) => {\r\n                console.log('Voice error:', event.error);\r\n                setVoiceState(prev => ({ ...prev, isActive: false }));\r\n                isStartingRef.current = false;\r\n                \r\n                // Only restart if not a permission error\r\n                if (event.error !== 'not-allowed') {\r\n                    setTimeout(startListening, 2000);\r\n                }\r\n            };\r\n\r\n            recognition.start();\r\n        } catch (error) {\r\n            console.error('Failed to start voice recognition:', error);\r\n            isStartingRef.current = false;\r\n            setTimeout(startListening, 3000);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (voiceState.isSupported && !voiceState.isInitialized) {\r\n            setVoiceState(prev => ({ ...prev, isInitialized: true }));\r\n            \r\n            // Start voice recognition after component mounts\r\n            setTimeout(() => {\r\n                startListening();\r\n            }, 2000);\r\n        }\r\n\r\n        return () => {\r\n            if (recognitionRef.current) {\r\n                try {\r\n                    recognitionRef.current.stop();\r\n                } catch (e) {}\r\n            }\r\n        };\r\n    }, [voiceState.isSupported, voiceState.isInitialized]);\r\n\r\n    return (\r\n        <div className=\"simple-voice-controller\">\r\n            <div className=\"voice-section\">\r\n                <h3>üé§ Voice Commands</h3>\r\n                \r\n                <div className=\"voice-status\">\r\n                    <div className={`voice-indicator ${voiceState.isActive ? 'listening' : 'waiting'}`}>\r\n                        {voiceState.isSupported ? (\r\n                            voiceState.isActive ? 'üé§ Listening...' : 'üé§ Ready - Speak Command'\r\n                        ) : (\r\n                            '‚ùå Voice Not Supported'\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                \r\n                {voiceState.lastCommand && (\r\n                    <div className=\"last-command\">\r\n                        ‚úì {voiceState.lastCommand}\r\n                    </div>\r\n                )}\r\n                \r\n                <div className=\"current-state\">\r\n                    <p><strong>Current Note:</strong> {currentNote ? `${currentNote.toUpperCase()}${composition.currentOctave}` : 'None detected'}</p>\r\n                    <p><strong>Current Octave:</strong> {composition.currentOctave}</p>\r\n                    <p><strong>Notes Added:</strong> {composition.notes.length}</p>\r\n                </div>\r\n                \r\n                <div className=\"commands-list\">\r\n                    <h4>Say These Commands:</h4>\r\n                    <ul>\r\n                        <li>\"Add\" - Add current note to staff</li>\r\n                        <li>\"Octave up\" - Increase octave</li>\r\n                        <li>\"Octave down\" - Decrease octave</li>\r\n                        <li>\"Play\" - Play composition</li>\r\n                        <li>\"Undo\" - Remove last note</li>\r\n                        <li>\"Clear\" - Clear all notes</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sheet Music Display */}\r\n            <SimpleSheetMusic notes={composition.notes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleVoiceController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}