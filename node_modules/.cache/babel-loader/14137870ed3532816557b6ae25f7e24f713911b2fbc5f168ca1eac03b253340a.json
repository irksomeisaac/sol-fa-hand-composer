{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\SimpleVoiceController.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { audioPlayer } from '../utils/audioUtils';\nimport SimpleSheetMusic from './SimpleSheetMusic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimpleVoiceController({\n  currentNote\n}) {\n  _s();\n  const [composition, setComposition] = useState({\n    notes: [],\n    currentOctave: 4\n  });\n  const [voiceState, setVoiceState] = useState({\n    isReady: false,\n    lastCommand: null,\n    isSupported: 'webkitSpeechRecognition' in window\n  });\n  const recognitionRef = useRef(null);\n  const handleVoiceCommand = transcript => {\n    console.log('Voice command received:', transcript);\n    if (transcript.includes('add') && currentNote) {\n      const newNote = {\n        note: currentNote,\n        octave: composition.currentOctave,\n        timestamp: Date.now()\n      };\n      setComposition(prev => ({\n        ...prev,\n        notes: [...prev.notes, newNote]\n      }));\n      audioPlayer.playUIFeedback(1200, 200);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}`\n      }));\n    } else if (transcript.includes('octave up') || transcript.includes('higher')) {\n      setComposition(prev => ({\n        ...prev,\n        currentOctave: Math.min(prev.currentOctave + 1, 7)\n      }));\n      audioPlayer.playUIFeedback(1000);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave up to ${Math.min(composition.currentOctave + 1, 7)}`\n      }));\n    } else if (transcript.includes('octave down') || transcript.includes('lower')) {\n      setComposition(prev => ({\n        ...prev,\n        currentOctave: Math.max(prev.currentOctave - 1, 2)\n      }));\n      audioPlayer.playUIFeedback(600);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave down to ${Math.max(composition.currentOctave - 1, 2)}`\n      }));\n    } else if (transcript.includes('play')) {\n      playComposition();\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Playing composition'\n      }));\n    } else if (transcript.includes('clear')) {\n      setComposition(prev => ({\n        ...prev,\n        notes: []\n      }));\n      audioPlayer.playUIFeedback(400, 300);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Composition cleared'\n      }));\n    } else if (transcript.includes('undo')) {\n      setComposition(prev => ({\n        ...prev,\n        notes: prev.notes.slice(0, -1)\n      }));\n      audioPlayer.playUIFeedback(500);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Last note removed'\n      }));\n    }\n  };\n  const playComposition = () => {\n    if (composition.notes.length === 0) {\n      audioPlayer.playUIFeedback(400, 300);\n      return;\n    }\n    composition.notes.forEach((noteItem, index) => {\n      setTimeout(() => {\n        audioPlayer.playNote(noteItem.note, noteItem.octave);\n        setTimeout(() => audioPlayer.stopNote(), 450);\n      }, index * 500);\n    });\n  };\n  const setupVoiceRecognition = () => {\n    if (!voiceState.isSupported) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase().trim();\n      handleVoiceCommand(transcript);\n    };\n    recognition.onerror = event => {\n      console.log('Voice error (will continue):', event.error);\n      // Don't restart automatically - just log the error\n    };\n    recognition.onend = () => {\n      // Only restart if we haven't manually stopped\n      if (voiceState.isReady) {\n        setTimeout(() => {\n          try {\n            recognition.start();\n          } catch (e) {}\n        }, 1000);\n      }\n    };\n    return recognition;\n  };\n  useEffect(() => {\n    if (voiceState.isSupported) {\n      const recognition = setupVoiceRecognition();\n\n      // Start after delay\n      setTimeout(() => {\n        try {\n          recognition.start();\n          setVoiceState(prev => ({\n            ...prev,\n            isReady: true\n          }));\n          console.log('Voice recognition started');\n        } catch (error) {\n          console.error('Voice start failed:', error);\n        }\n      }, 3000);\n    }\n    return () => {\n      if (recognitionRef.current) {\n        setVoiceState(prev => ({\n          ...prev,\n          isReady: false\n        }));\n        try {\n          recognitionRef.current.stop();\n        } catch (e) {}\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-voice-controller\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFA4 Voice Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-indicator\",\n          children: voiceState.isSupported ? 'üé§ Voice Ready - Speak Commands' : '‚ùå Voice Not Supported'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), voiceState.lastCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-command\",\n        children: [\"\\u2713 \", voiceState.lastCommand]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }, this), \" \", currentNote ? `${currentNote.toUpperCase()}${composition.currentOctave}` : 'None detected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Octave:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 24\n          }, this), \" \", composition.currentOctave]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notes Added:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 24\n          }, this), \" \", composition.notes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commands-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Say These Commands:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Add\\\" - Add current note to staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Octave up\\\" - Increase octave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Octave down\\\" - Decrease octave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Play\\\" - Play composition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Undo\\\" - Remove last note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\\"Clear\\\" - Clear all notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleSheetMusic, {\n      notes: composition.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n_s(SimpleVoiceController, \"EG5pPOnPIeu6o3qjYJF1UEmYDrc=\");\n_c = SimpleVoiceController;\nexport default SimpleVoiceController;\nvar _c;\n$RefreshReg$(_c, \"SimpleVoiceController\");","map":{"version":3,"names":["React","useRef","useState","useEffect","audioPlayer","SimpleSheetMusic","jsxDEV","_jsxDEV","SimpleVoiceController","currentNote","_s","composition","setComposition","notes","currentOctave","voiceState","setVoiceState","isReady","lastCommand","isSupported","window","recognitionRef","handleVoiceCommand","transcript","console","log","includes","newNote","note","octave","timestamp","Date","now","prev","playUIFeedback","toUpperCase","Math","min","max","playComposition","slice","length","forEach","noteItem","index","setTimeout","playNote","stopNote","setupVoiceRecognition","recognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","results","toLowerCase","trim","onerror","error","onend","start","e","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/SimpleVoiceController.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\nimport SimpleSheetMusic from './SimpleSheetMusic';\r\n\r\nfunction SimpleVoiceController({ currentNote }) {\r\n    const [composition, setComposition] = useState({\r\n        notes: [],\r\n        currentOctave: 4\r\n    });\r\n    \r\n    const [voiceState, setVoiceState] = useState({\r\n        isReady: false,\r\n        lastCommand: null,\r\n        isSupported: 'webkitSpeechRecognition' in window\r\n    });\r\n    \r\n    const recognitionRef = useRef(null);\r\n\r\n    const handleVoiceCommand = (transcript) => {\r\n        console.log('Voice command received:', transcript);\r\n        \r\n        if (transcript.includes('add') && currentNote) {\r\n            const newNote = {\r\n                note: currentNote,\r\n                octave: composition.currentOctave,\r\n                timestamp: Date.now()\r\n            };\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                notes: [...prev.notes, newNote]\r\n            }));\r\n            audioPlayer.playUIFeedback(1200, 200);\r\n            setVoiceState(prev => ({ \r\n                ...prev, \r\n                lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}` \r\n            }));\r\n        }\r\n        else if (transcript.includes('octave up') || transcript.includes('higher')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                currentOctave: Math.min(prev.currentOctave + 1, 7)\r\n            }));\r\n            audioPlayer.playUIFeedback(1000);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave up to ${Math.min(composition.currentOctave + 1, 7)}` }));\r\n        }\r\n        else if (transcript.includes('octave down') || transcript.includes('lower')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                currentOctave: Math.max(prev.currentOctave - 1, 2)\r\n            }));\r\n            audioPlayer.playUIFeedback(600);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave down to ${Math.max(composition.currentOctave - 1, 2)}` }));\r\n        }\r\n        else if (transcript.includes('play')) {\r\n            playComposition();\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Playing composition' }));\r\n        }\r\n        else if (transcript.includes('clear')) {\r\n            setComposition(prev => ({ ...prev, notes: [] }));\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Composition cleared' }));\r\n        }\r\n        else if (transcript.includes('undo')) {\r\n            setComposition(prev => ({\r\n                ...prev,\r\n                notes: prev.notes.slice(0, -1)\r\n            }));\r\n            audioPlayer.playUIFeedback(500);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Last note removed' }));\r\n        }\r\n    };\r\n\r\n    const playComposition = () => {\r\n        if (composition.notes.length === 0) {\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            return;\r\n        }\r\n\r\n        composition.notes.forEach((noteItem, index) => {\r\n            setTimeout(() => {\r\n                audioPlayer.playNote(noteItem.note, noteItem.octave);\r\n                setTimeout(() => audioPlayer.stopNote(), 450);\r\n            }, index * 500);\r\n        });\r\n    };\r\n\r\n    const setupVoiceRecognition = () => {\r\n        if (!voiceState.isSupported) return;\r\n        \r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognitionRef.current = recognition;\r\n        \r\n        recognition.continuous = true;\r\n        recognition.interimResults = false;\r\n        recognition.lang = 'en-US';\r\n        \r\n        recognition.onresult = (event) => {\r\n            const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase().trim();\r\n            handleVoiceCommand(transcript);\r\n        };\r\n        \r\n        recognition.onerror = (event) => {\r\n            console.log('Voice error (will continue):', event.error);\r\n            // Don't restart automatically - just log the error\r\n        };\r\n        \r\n        recognition.onend = () => {\r\n            // Only restart if we haven't manually stopped\r\n            if (voiceState.isReady) {\r\n                setTimeout(() => {\r\n                    try { recognition.start(); } catch (e) {}\r\n                }, 1000);\r\n            }\r\n        };\r\n\r\n        return recognition;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (voiceState.isSupported) {\r\n            const recognition = setupVoiceRecognition();\r\n            \r\n            // Start after delay\r\n            setTimeout(() => {\r\n                try {\r\n                    recognition.start();\r\n                    setVoiceState(prev => ({ ...prev, isReady: true }));\r\n                    console.log('Voice recognition started');\r\n                } catch (error) {\r\n                    console.error('Voice start failed:', error);\r\n                }\r\n            }, 3000);\r\n        }\r\n\r\n        return () => {\r\n            if (recognitionRef.current) {\r\n                setVoiceState(prev => ({ ...prev, isReady: false }));\r\n                try {\r\n                    recognitionRef.current.stop();\r\n                } catch (e) {}\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"simple-voice-controller\">\r\n            <div className=\"voice-section\">\r\n                <h3>üé§ Voice Commands</h3>\r\n                \r\n                <div className=\"voice-status\">\r\n                    <div className=\"voice-indicator\">\r\n                        {voiceState.isSupported ? \r\n                            'üé§ Voice Ready - Speak Commands' : \r\n                            '‚ùå Voice Not Supported'\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                {voiceState.lastCommand && (\r\n                    <div className=\"last-command\">\r\n                        ‚úì {voiceState.lastCommand}\r\n                    </div>\r\n                )}\r\n                \r\n                <div className=\"current-state\">\r\n                    <p><strong>Current Note:</strong> {currentNote ? `${currentNote.toUpperCase()}${composition.currentOctave}` : 'None detected'}</p>\r\n                    <p><strong>Current Octave:</strong> {composition.currentOctave}</p>\r\n                    <p><strong>Notes Added:</strong> {composition.notes.length}</p>\r\n                </div>\r\n                \r\n                <div className=\"commands-list\">\r\n                    <h4>Say These Commands:</h4>\r\n                    <ul>\r\n                        <li>\"Add\" - Add current note to staff</li>\r\n                        <li>\"Octave up\" - Increase octave</li>\r\n                        <li>\"Octave down\" - Decrease octave</li>\r\n                        <li>\"Play\" - Play composition</li>\r\n                        <li>\"Undo\" - Remove last note</li>\r\n                        <li>\"Clear\" - Clear all notes</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sheet Music Display */}\r\n            <SimpleSheetMusic notes={composition.notes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleVoiceController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}