{"ast":null,"code":"// Left hand gesture recognition for UI controls\n// These gestures are designed to NOT conflict with Kodály hand signs\n\nconst distance = (p1, p2) => Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2) + Math.pow(p1.z - p2.z, 2));\nconst getFingerExtension = (landmarks, fingerIndices) => {\n  const base = landmarks[fingerIndices[0]];\n  const tip = landmarks[fingerIndices[3]];\n  const directDistance = distance(base, tip);\n  let segmentLength = 0;\n  for (let i = 0; i < 3; i++) {\n    segmentLength += distance(landmarks[fingerIndices[i]], landmarks[fingerIndices[i + 1]]);\n  }\n  return segmentLength > 0 ? directDistance / segmentLength : 0;\n};\nconst analyzeLeftHandShape = landmarks => {\n  const FINGERS = {\n    THUMB: [1, 2, 3, 4],\n    INDEX: [5, 6, 7, 8],\n    MIDDLE: [9, 10, 11, 12],\n    RING: [13, 14, 15, 16],\n    PINKY: [17, 18, 19, 20]\n  };\n  const extensions = {\n    thumb: getFingerExtension(landmarks, FINGERS.THUMB),\n    index: getFingerExtension(landmarks, FINGERS.INDEX),\n    middle: getFingerExtension(landmarks, FINGERS.MIDDLE),\n    ring: getFingerExtension(landmarks, FINGERS.RING),\n    pinky: getFingerExtension(landmarks, FINGERS.PINKY)\n  };\n\n  // Get thumb direction for thumbs up/down\n  const thumbTip = landmarks[4];\n  const thumbBase = landmarks[1];\n  const wrist = landmarks[0];\n  const thumbDirection = {\n    y: thumbTip.y - wrist.y\n  };\n  return {\n    extensions,\n    thumbDirection,\n    fingersExtended: Object.values(extensions).filter(ext => ext > 0.7).length,\n    allFingersClosed: Object.values(extensions).every(ext => ext < 0.4),\n    isThumbUp: extensions.thumb > 0.7 && thumbDirection.y < -0.1,\n    isThumbDown: extensions.thumb > 0.7 && thumbDirection.y > 0.1\n  };\n};\nexport const recognizeLeftHandGesture = landmarks => {\n  if (!landmarks || landmarks.length < 21) return null;\n  const handShape = analyzeLeftHandShape(landmarks);\n\n  // PEACE SIGN - Index and middle extended, others closed\n  if (handShape.extensions.index > 0.8 && handShape.extensions.middle > 0.8 && handShape.extensions.ring < 0.4 && handShape.extensions.pinky < 0.4 && handShape.extensions.thumb < 0.5) {\n    return {\n      gesture: 'PEACE_SIGN',\n      action: 'ADD_NOTE',\n      confidence: 0.9\n    };\n  }\n\n  // THUMBS UP - Only thumb extended, pointing up\n  else if (handShape.isThumbUp && handShape.extensions.index < 0.4 && handShape.extensions.middle < 0.4 && handShape.extensions.ring < 0.4 && handShape.extensions.pinky < 0.4) {\n    return {\n      gesture: 'THUMBS_UP',\n      action: 'OCTAVE_UP',\n      confidence: 0.9\n    };\n  }\n\n  // THUMBS DOWN - Only thumb extended, pointing down\n  else if (handShape.isThumbDown && handShape.extensions.index < 0.4 && handShape.extensions.middle < 0.4 && handShape.extensions.ring < 0.4 && handShape.extensions.pinky < 0.4) {\n    return {\n      gesture: 'THUMBS_DOWN',\n      action: 'OCTAVE_DOWN',\n      confidence: 0.9\n    };\n  }\n\n  // OPEN PALM - All fingers extended\n  else if (handShape.fingersExtended >= 4 && handShape.extensions.thumb > 0.7) {\n    return {\n      gesture: 'OPEN_PALM',\n      action: 'PLAY_COMPOSITION',\n      confidence: 0.9\n    };\n  }\n\n  // POINTING - Only index finger extended\n  else if (handShape.extensions.index > 0.8 && handShape.extensions.middle < 0.4 && handShape.extensions.ring < 0.4 && handShape.extensions.pinky < 0.4 && handShape.extensions.thumb < 0.5) {\n    return {\n      gesture: 'POINTING',\n      action: 'UNDO',\n      confidence: 0.9\n    };\n  }\n\n  // CLOSED FIST - All fingers closed\n  else if (handShape.allFingersClosed) {\n    return {\n      gesture: 'CLOSED_FIST',\n      action: 'CLEAR_COMPOSITION',\n      confidence: 0.9\n    };\n  }\n  return null;\n};","map":{"version":3,"names":["distance","p1","p2","Math","sqrt","pow","x","y","z","getFingerExtension","landmarks","fingerIndices","base","tip","directDistance","segmentLength","i","analyzeLeftHandShape","FINGERS","THUMB","INDEX","MIDDLE","RING","PINKY","extensions","thumb","index","middle","ring","pinky","thumbTip","thumbBase","wrist","thumbDirection","fingersExtended","Object","values","filter","ext","length","allFingersClosed","every","isThumbUp","isThumbDown","recognizeLeftHandGesture","handShape","gesture","action","confidence"],"sources":["C:/Users/user/sol-fa-app/src/utils/leftHandGestures.js"],"sourcesContent":["// Left hand gesture recognition for UI controls\r\n// These gestures are designed to NOT conflict with Kodály hand signs\r\n\r\nconst distance = (p1, p2) => Math.sqrt(\r\n    Math.pow(p1.x - p2.x, 2) +\r\n    Math.pow(p1.y - p2.y, 2) +\r\n    Math.pow(p1.z - p2.z, 2)\r\n);\r\n\r\nconst getFingerExtension = (landmarks, fingerIndices) => {\r\n    const base = landmarks[fingerIndices[0]];\r\n    const tip = landmarks[fingerIndices[3]];\r\n    const directDistance = distance(base, tip);\r\n    \r\n    let segmentLength = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        segmentLength += distance(\r\n            landmarks[fingerIndices[i]], \r\n            landmarks[fingerIndices[i + 1]]\r\n        );\r\n    }\r\n    \r\n    return segmentLength > 0 ? directDistance / segmentLength : 0;\r\n};\r\n\r\nconst analyzeLeftHandShape = (landmarks) => {\r\n    const FINGERS = {\r\n        THUMB: [1, 2, 3, 4],\r\n        INDEX: [5, 6, 7, 8],\r\n        MIDDLE: [9, 10, 11, 12],\r\n        RING: [13, 14, 15, 16],\r\n        PINKY: [17, 18, 19, 20]\r\n    };\r\n\r\n    const extensions = {\r\n        thumb: getFingerExtension(landmarks, FINGERS.THUMB),\r\n        index: getFingerExtension(landmarks, FINGERS.INDEX),\r\n        middle: getFingerExtension(landmarks, FINGERS.MIDDLE),\r\n        ring: getFingerExtension(landmarks, FINGERS.RING),\r\n        pinky: getFingerExtension(landmarks, FINGERS.PINKY)\r\n    };\r\n\r\n    // Get thumb direction for thumbs up/down\r\n    const thumbTip = landmarks[4];\r\n    const thumbBase = landmarks[1];\r\n    const wrist = landmarks[0];\r\n    \r\n    const thumbDirection = {\r\n        y: thumbTip.y - wrist.y\r\n    };\r\n\r\n    return {\r\n        extensions,\r\n        thumbDirection,\r\n        fingersExtended: Object.values(extensions).filter(ext => ext > 0.7).length,\r\n        allFingersClosed: Object.values(extensions).every(ext => ext < 0.4),\r\n        isThumbUp: extensions.thumb > 0.7 && thumbDirection.y < -0.1,\r\n        isThumbDown: extensions.thumb > 0.7 && thumbDirection.y > 0.1\r\n    };\r\n};\r\n\r\nexport const recognizeLeftHandGesture = (landmarks) => {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    const handShape = analyzeLeftHandShape(landmarks);\r\n    \r\n    // PEACE SIGN - Index and middle extended, others closed\r\n    if (handShape.extensions.index > 0.8 && \r\n        handShape.extensions.middle > 0.8 && \r\n        handShape.extensions.ring < 0.4 && \r\n        handShape.extensions.pinky < 0.4 && \r\n        handShape.extensions.thumb < 0.5) {\r\n        return {\r\n            gesture: 'PEACE_SIGN',\r\n            action: 'ADD_NOTE',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n    \r\n    // THUMBS UP - Only thumb extended, pointing up\r\n    else if (handShape.isThumbUp && \r\n             handShape.extensions.index < 0.4 && \r\n             handShape.extensions.middle < 0.4 && \r\n             handShape.extensions.ring < 0.4 && \r\n             handShape.extensions.pinky < 0.4) {\r\n        return {\r\n            gesture: 'THUMBS_UP',\r\n            action: 'OCTAVE_UP',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n    \r\n    // THUMBS DOWN - Only thumb extended, pointing down\r\n    else if (handShape.isThumbDown && \r\n             handShape.extensions.index < 0.4 && \r\n             handShape.extensions.middle < 0.4 && \r\n             handShape.extensions.ring < 0.4 && \r\n             handShape.extensions.pinky < 0.4) {\r\n        return {\r\n            gesture: 'THUMBS_DOWN',\r\n            action: 'OCTAVE_DOWN',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n    \r\n    // OPEN PALM - All fingers extended\r\n    else if (handShape.fingersExtended >= 4 && \r\n             handShape.extensions.thumb > 0.7) {\r\n        return {\r\n            gesture: 'OPEN_PALM',\r\n            action: 'PLAY_COMPOSITION',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n    \r\n    // POINTING - Only index finger extended\r\n    else if (handShape.extensions.index > 0.8 && \r\n             handShape.extensions.middle < 0.4 && \r\n             handShape.extensions.ring < 0.4 && \r\n             handShape.extensions.pinky < 0.4 && \r\n             handShape.extensions.thumb < 0.5) {\r\n        return {\r\n            gesture: 'POINTING',\r\n            action: 'UNDO',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n    \r\n    // CLOSED FIST - All fingers closed\r\n    else if (handShape.allFingersClosed) {\r\n        return {\r\n            gesture: 'CLOSED_FIST',\r\n            action: 'CLEAR_COMPOSITION',\r\n            confidence: 0.9\r\n        };\r\n    }\r\n\r\n    return null;\r\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}