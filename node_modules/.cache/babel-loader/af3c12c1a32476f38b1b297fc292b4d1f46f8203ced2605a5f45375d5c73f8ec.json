{"ast":null,"code":"// Constants for finger joints\nconst FINGERS = {\n  THUMB: [1, 2, 3, 4],\n  INDEX: [5, 6, 7, 8],\n  MIDDLE: [9, 10, 11, 12],\n  RING: [13, 14, 15, 16],\n  PINKY: [17, 18, 19, 20]\n};\n\n// Basic helper functions\nfunction distance(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2) + Math.pow(p1.z - p2.z, 2));\n}\nfunction normalize(vector) {\n  const magnitude = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\n  if (magnitude === 0) return {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return {\n    x: vector.x / magnitude,\n    y: vector.y / magnitude,\n    z: vector.z / magnitude\n  };\n}\nfunction getFingerExtension(landmarks, fingerIndices) {\n  const base = landmarks[fingerIndices[0]];\n  const tip = landmarks[fingerIndices[3]];\n  const directDistance = distance(base, tip);\n  let segmentLength = 0;\n  for (let i = 0; i < 3; i++) {\n    segmentLength += distance(landmarks[fingerIndices[i]], landmarks[fingerIndices[i + 1]]);\n  }\n  return segmentLength > 0 ? directDistance / segmentLength : 0;\n}\nfunction analyzeFingers(landmarks) {\n  if (!landmarks) return {\n    values: {}\n  };\n  return {\n    values: {\n      thumb: getFingerExtension(landmarks, FINGERS.THUMB),\n      index: getFingerExtension(landmarks, FINGERS.INDEX),\n      middle: getFingerExtension(landmarks, FINGERS.MIDDLE),\n      ring: getFingerExtension(landmarks, FINGERS.RING),\n      pinky: getFingerExtension(landmarks, FINGERS.PINKY)\n    }\n  };\n}\nfunction getHandDirection(landmarks) {\n  const wrist = landmarks[0];\n  const middle_tip = landmarks[12];\n  const dir = normalize({\n    x: middle_tip.x - wrist.x,\n    y: middle_tip.y - wrist.y,\n    z: middle_tip.z - wrist.z\n  });\n  const verticalAngle = Math.atan2(-dir.y, Math.sqrt(dir.x * dir.x + dir.z * dir.z)) * (180 / Math.PI);\n  return {\n    direction: dir,\n    verticalAngle,\n    isPointingUp: verticalAngle > 45,\n    isPointingDown: verticalAngle < -45,\n    isPointingForward: Math.abs(dir.z) > Math.max(Math.abs(dir.x), Math.abs(dir.y)),\n    isHorizontal: Math.abs(verticalAngle) < 20\n  };\n}\nfunction getPalmDirection(landmarks) {\n  const wrist = landmarks[0];\n  const indexBase = landmarks[5];\n  const pinkyBase = landmarks[17];\n  const v1 = {\n    x: indexBase.x - wrist.x,\n    y: indexBase.y - wrist.y,\n    z: indexBase.z - wrist.z\n  };\n  const v2 = {\n    x: pinkyBase.x - wrist.x,\n    y: pinkyBase.y - wrist.y,\n    z: pinkyBase.z - wrist.z\n  };\n  const normal = normalize({\n    x: v1.y * v2.z - v1.z * v2.y,\n    y: v1.z * v2.x - v1.x * v2.z,\n    z: v1.x * v2.y - v1.y * v2.x\n  });\n  return {\n    normal,\n    isDown: normal.y > 0.5,\n    isUp: normal.y < -0.5,\n    isSide: Math.abs(normal.x) > 0.5\n  };\n}\nfunction getThumbDirection(landmarks) {\n  const thumbBase = landmarks[1];\n  const thumbTip = landmarks[4];\n  const dir = normalize({\n    x: thumbTip.x - thumbBase.x,\n    y: thumbTip.y - thumbBase.y,\n    z: thumbTip.z - thumbBase.z\n  });\n  const angle = Math.atan2(-dir.y, Math.sqrt(dir.x * dir.x + dir.z * dir.z)) * (180 / Math.PI);\n  return {\n    angle,\n    isPointingDown: angle < -30,\n    isPointingUp: angle > 30\n  };\n}\nexport function recognizeKodalySign(landmarks) {\n  if (!landmarks || landmarks.length < 21) return null;\n  const fingers = analyzeFingers(landmarks);\n  const handDir = getHandDirection(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n  const thumbDir = getThumbDirection(landmarks);\n  const debug = {\n    extensions: fingers.values,\n    handDirection: {\n      verticalAngle: handDir.verticalAngle,\n      isPointingUp: handDir.isPointingUp,\n      isPointingDown: handDir.isPointingDown,\n      isPointingForward: handDir.isPointingForward,\n      isHorizontal: handDir.isHorizontal\n    },\n    palmOrientation: {\n      isDown: palmDir.isDown,\n      isUp: palmDir.isUp,\n      isSide: palmDir.isSide\n    },\n    thumbDirection: {\n      angle: thumbDir.angle,\n      isPointingDown: thumbDir.isPointingDown,\n      isPointingUp: thumbDir.isPointingUp\n    }\n  };\n  let sign = null;\n  let confidence = 0;\n\n  // MI - Very flat hand, horizontal\n  if (fingers.values.index > 0.95 && fingers.values.middle > 0.95 && fingers.values.ring > 0.95 && fingers.values.pinky > 0.95 && Math.abs(handDir.verticalAngle) < 10) {\n    sign = 'mi';\n    confidence = 0.95;\n  }\n\n  // TI - Index clearly dominant, pointing up\n  else if (fingers.values.index > 0.95 && fingers.values.index > fingers.values.middle + 0.12 &&\n  // Index clearly more extended\n  fingers.values.index > fingers.values.ring + 0.12 && fingers.values.index > fingers.values.pinky + 0.12 && fingers.values.middle < 0.88 &&\n  // Other fingers clearly less extended\n  fingers.values.ring < 0.88 && fingers.values.pinky < 0.88 && handDir.verticalAngle > 28 &&\n  // Specific Ti angle range\n  handDir.verticalAngle < 42 && palmDir.isSide) {\n    sign = 'ti';\n    confidence = 0.95;\n  }\n\n  // RE - All fingers extended, different angle than Ti\n  else if (fingers.values.index > 0.85 && fingers.values.middle > 0.85 && fingers.values.ring > 0.85 && fingers.values.pinky > 0.85 && handDir.verticalAngle > 45 &&\n  // Higher angle than Ti\n  handDir.verticalAngle < 70) {\n    sign = 're';\n    confidence = 0.9;\n  }\n\n  // DO - Tight fist\n  else if (fingers.values.thumb < 0.7 && fingers.values.index < 0.4 && fingers.values.middle < 0.4 && fingers.values.ring < 0.4 && fingers.values.pinky < 0.4) {\n    sign = 'do';\n    confidence = 0.9;\n  }\n\n  // FA - Thumb pointing down, other fingers in fist\n  else if (fingers.values.thumb > 0.7 && fingers.values.index < 0.5 && fingers.values.middle < 0.5 && fingers.values.ring < 0.5 && fingers.values.pinky < 0.5 && thumbDir.angle < -30) {\n    sign = 'fa';\n    confidence = 0.9;\n  }\n\n  // SOL - Curved fingers to side\n  else if (fingers.values.index > 0.8 && fingers.values.middle > 0.8 && fingers.values.ring > 0.8 && fingers.values.pinky > 0.8 && palmDir.isSide && !handDir.isHorizontal) {\n    sign = 'sol';\n    confidence = 0.9;\n  }\n\n  // LA - Curved fingers pointing down\n  else if (fingers.values.thumb > 0.9 && fingers.values.index > 0.9 && fingers.values.middle > 0.9 && fingers.values.ring > 0.9 && fingers.values.pinky > 0.9 && handDir.verticalAngle < -45) {\n    sign = 'la';\n    confidence = 0.9;\n  }\n  return {\n    sign,\n    confidence,\n    debug\n  };\n}\nexport function analyzeHand(landmarks) {\n  if (!landmarks || landmarks.length < 21) return null;\n  const fingers = analyzeFingers(landmarks);\n  const handDir = getHandDirection(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n  const thumbDir = getThumbDirection(landmarks);\n  return {\n    fingers: fingers.values,\n    handDirection: handDir,\n    palmDirection: palmDir,\n    thumbDirection: thumbDir\n  };\n}","map":{"version":3,"names":["FINGERS","THUMB","INDEX","MIDDLE","RING","PINKY","distance","p1","p2","Math","sqrt","pow","x","y","z","normalize","vector","magnitude","getFingerExtension","landmarks","fingerIndices","base","tip","directDistance","segmentLength","i","analyzeFingers","values","thumb","index","middle","ring","pinky","getHandDirection","wrist","middle_tip","dir","verticalAngle","atan2","PI","direction","isPointingUp","isPointingDown","isPointingForward","abs","max","isHorizontal","getPalmDirection","indexBase","pinkyBase","v1","v2","normal","isDown","isUp","isSide","getThumbDirection","thumbBase","thumbTip","angle","recognizeKodalySign","length","fingers","handDir","palmDir","thumbDir","debug","extensions","handDirection","palmOrientation","thumbDirection","sign","confidence","analyzeHand","palmDirection"],"sources":["C:/Users/user/sol-fa-app/src/utils/kodalySignsDB_improved.js"],"sourcesContent":["// Constants for finger joints\r\nconst FINGERS = {\r\n    THUMB: [1, 2, 3, 4],\r\n    INDEX: [5, 6, 7, 8],\r\n    MIDDLE: [9, 10, 11, 12],\r\n    RING: [13, 14, 15, 16],\r\n    PINKY: [17, 18, 19, 20]\r\n};\r\n\r\n// Basic helper functions\r\nfunction distance(p1, p2) {\r\n    return Math.sqrt(\r\n        Math.pow(p1.x - p2.x, 2) +\r\n        Math.pow(p1.y - p2.y, 2) +\r\n        Math.pow(p1.z - p2.z, 2)\r\n    );\r\n}\r\n\r\nfunction normalize(vector) {\r\n    const magnitude = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\r\n    if (magnitude === 0) return { x: 0, y: 0, z: 0 };\r\n    return {\r\n        x: vector.x / magnitude,\r\n        y: vector.y / magnitude,\r\n        z: vector.z / magnitude\r\n    };\r\n}\r\n\r\nfunction getFingerExtension(landmarks, fingerIndices) {\r\n    const base = landmarks[fingerIndices[0]];\r\n    const tip = landmarks[fingerIndices[3]];\r\n    const directDistance = distance(base, tip);\r\n    \r\n    let segmentLength = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        segmentLength += distance(landmarks[fingerIndices[i]], landmarks[fingerIndices[i + 1]]);\r\n    }\r\n    \r\n    return segmentLength > 0 ? directDistance / segmentLength : 0;\r\n}\r\n\r\nfunction analyzeFingers(landmarks) {\r\n    if (!landmarks) return { values: {} };\r\n    return {\r\n        values: {\r\n            thumb: getFingerExtension(landmarks, FINGERS.THUMB),\r\n            index: getFingerExtension(landmarks, FINGERS.INDEX),\r\n            middle: getFingerExtension(landmarks, FINGERS.MIDDLE),\r\n            ring: getFingerExtension(landmarks, FINGERS.RING),\r\n            pinky: getFingerExtension(landmarks, FINGERS.PINKY)\r\n        }\r\n    };\r\n}\r\n\r\nfunction getHandDirection(landmarks) {\r\n    const wrist = landmarks[0];\r\n    const middle_tip = landmarks[12];\r\n    const dir = normalize({\r\n        x: middle_tip.x - wrist.x,\r\n        y: middle_tip.y - wrist.y,\r\n        z: middle_tip.z - wrist.z\r\n    });\r\n    const verticalAngle = Math.atan2(-dir.y, Math.sqrt(dir.x * dir.x + dir.z * dir.z)) * (180 / Math.PI);\r\n    return {\r\n        direction: dir,\r\n        verticalAngle,\r\n        isPointingUp: verticalAngle > 45,\r\n        isPointingDown: verticalAngle < -45,\r\n        isPointingForward: Math.abs(dir.z) > Math.max(Math.abs(dir.x), Math.abs(dir.y)),\r\n        isHorizontal: Math.abs(verticalAngle) < 20\r\n    };\r\n}\r\n\r\nfunction getPalmDirection(landmarks) {\r\n    const wrist = landmarks[0];\r\n    const indexBase = landmarks[5];\r\n    const pinkyBase = landmarks[17];\r\n    const v1 = { x: indexBase.x - wrist.x, y: indexBase.y - wrist.y, z: indexBase.z - wrist.z };\r\n    const v2 = { x: pinkyBase.x - wrist.x, y: pinkyBase.y - wrist.y, z: pinkyBase.z - wrist.z };\r\n    const normal = normalize({\r\n        x: v1.y * v2.z - v1.z * v2.y,\r\n        y: v1.z * v2.x - v1.x * v2.z,\r\n        z: v1.x * v2.y - v1.y * v2.x\r\n    });\r\n    return {\r\n        normal,\r\n        isDown: normal.y > 0.5,\r\n        isUp: normal.y < -0.5,\r\n        isSide: Math.abs(normal.x) > 0.5\r\n    };\r\n}\r\n\r\nfunction getThumbDirection(landmarks) {\r\n    const thumbBase = landmarks[1];\r\n    const thumbTip = landmarks[4];\r\n    const dir = normalize({\r\n        x: thumbTip.x - thumbBase.x,\r\n        y: thumbTip.y - thumbBase.y,\r\n        z: thumbTip.z - thumbBase.z\r\n    });\r\n    const angle = Math.atan2(-dir.y, Math.sqrt(dir.x * dir.x + dir.z * dir.z)) * (180 / Math.PI);\r\n    return {\r\n        angle,\r\n        isPointingDown: angle < -30,\r\n        isPointingUp: angle > 30\r\n    };\r\n}\r\n\r\nexport function recognizeKodalySign(landmarks) {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    const fingers = analyzeFingers(landmarks);\r\n    const handDir = getHandDirection(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n    const thumbDir = getThumbDirection(landmarks);\r\n\r\n    const debug = {\r\n        extensions: fingers.values,\r\n        handDirection: {\r\n            verticalAngle: handDir.verticalAngle,\r\n            isPointingUp: handDir.isPointingUp,\r\n            isPointingDown: handDir.isPointingDown,\r\n            isPointingForward: handDir.isPointingForward,\r\n            isHorizontal: handDir.isHorizontal\r\n        },\r\n        palmOrientation: {\r\n            isDown: palmDir.isDown,\r\n            isUp: palmDir.isUp,\r\n            isSide: palmDir.isSide\r\n        },\r\n        thumbDirection: {\r\n            angle: thumbDir.angle,\r\n            isPointingDown: thumbDir.isPointingDown,\r\n            isPointingUp: thumbDir.isPointingUp\r\n        }\r\n    };\r\n\r\n    let sign = null;\r\n    let confidence = 0;\r\n\r\n    // MI - Very flat hand, horizontal\r\n    if (fingers.values.index > 0.95 &&      \r\n        fingers.values.middle > 0.95 &&\r\n        fingers.values.ring > 0.95 &&\r\n        fingers.values.pinky > 0.95 &&\r\n        Math.abs(handDir.verticalAngle) < 10) {\r\n        sign = 'mi';\r\n        confidence = 0.95;\r\n    }\r\n    \r\n    // TI - Index clearly dominant, pointing up\r\n    else if (fingers.values.index > 0.95 &&     \r\n             fingers.values.index > fingers.values.middle + 0.12 &&  // Index clearly more extended\r\n             fingers.values.index > fingers.values.ring + 0.12 &&    \r\n             fingers.values.index > fingers.values.pinky + 0.12 &&   \r\n             fingers.values.middle < 0.88 &&     // Other fingers clearly less extended\r\n             fingers.values.ring < 0.88 &&\r\n             fingers.values.pinky < 0.88 &&\r\n             handDir.verticalAngle > 28 &&       // Specific Ti angle range\r\n             handDir.verticalAngle < 42 &&\r\n             palmDir.isSide) {\r\n        sign = 'ti';\r\n        confidence = 0.95;\r\n    }\r\n    \r\n    // RE - All fingers extended, different angle than Ti\r\n    else if (fingers.values.index > 0.85 &&     \r\n             fingers.values.middle > 0.85 &&\r\n             fingers.values.ring > 0.85 &&\r\n             fingers.values.pinky > 0.85 &&\r\n             handDir.verticalAngle > 45 &&       // Higher angle than Ti\r\n             handDir.verticalAngle < 70) {\r\n        sign = 're';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // DO - Tight fist\r\n    else if (fingers.values.thumb < 0.7 &&    \r\n             fingers.values.index < 0.4 &&     \r\n             fingers.values.middle < 0.4 &&\r\n             fingers.values.ring < 0.4 &&\r\n             fingers.values.pinky < 0.4) {\r\n        sign = 'do';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // FA - Thumb pointing down, other fingers in fist\r\n    else if (fingers.values.thumb > 0.7 &&      \r\n             fingers.values.index < 0.5 &&       \r\n             fingers.values.middle < 0.5 &&\r\n             fingers.values.ring < 0.5 &&\r\n             fingers.values.pinky < 0.5 &&\r\n             thumbDir.angle < -30) {\r\n        sign = 'fa';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // SOL - Curved fingers to side\r\n    else if (fingers.values.index > 0.8 &&      \r\n             fingers.values.middle > 0.8 &&\r\n             fingers.values.ring > 0.8 &&\r\n             fingers.values.pinky > 0.8 &&\r\n             palmDir.isSide &&\r\n             !handDir.isHorizontal) {\r\n        sign = 'sol';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // LA - Curved fingers pointing down\r\n    else if (fingers.values.thumb > 0.9 &&    \r\n             fingers.values.index > 0.9 &&     \r\n             fingers.values.middle > 0.9 &&\r\n             fingers.values.ring > 0.9 &&\r\n             fingers.values.pinky > 0.9 &&\r\n             handDir.verticalAngle < -45) {\r\n        sign = 'la';\r\n        confidence = 0.9;\r\n    }\r\n\r\n    return { sign, confidence, debug };\r\n}\r\n\r\nexport function analyzeHand(landmarks) {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n    const fingers = analyzeFingers(landmarks);\r\n    const handDir = getHandDirection(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n    const thumbDir = getThumbDirection(landmarks);\r\n    return {\r\n        fingers: fingers.values,\r\n        handDirection: handDir,\r\n        palmDirection: palmDir,\r\n        thumbDirection: thumbDir\r\n    };\r\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}