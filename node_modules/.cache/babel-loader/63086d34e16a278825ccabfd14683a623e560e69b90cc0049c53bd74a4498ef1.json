{"ast":null,"code":"// ... (keep all the helper functions the same until the recognizeKodalySign function)\n\nexport function recognizeKodalySign(landmarks) {\n  if (!landmarks || landmarks.length < 21) return null;\n  const fingers = analyzeFingers(landmarks);\n  const handDir = getHandDirection(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n\n  // Debug info - keep the same debug structure\n  const debug = {\n    extensions: fingers.values,\n    handDirection: {\n      verticalAngle: handDir.verticalAngle,\n      isPointingUp: handDir.isPointingUp,\n      isPointingDown: handDir.isPointingDown,\n      isPointingForward: handDir.isPointingForward,\n      isHorizontal: handDir.isHorizontal\n    },\n    palmOrientation: {\n      isDown: palmDir.isDown,\n      isUp: palmDir.isUp,\n      isSide: palmDir.isSide\n    }\n  };\n  let sign = null;\n  let confidence = 0;\n\n  // Log current values for debugging\n  console.log('Hand state:', {\n    fingerValues: fingers.values,\n    handAngle: handDir.verticalAngle,\n    palmDirection: palmDir\n  });\n\n  // DO - Tight fist\n  if (fingers.values.thumb < 0.4 && fingers.values.index < 0.4 && fingers.values.middle < 0.4 && fingers.values.ring < 0.4 && fingers.values.pinky < 0.4) {\n    sign = 'do';\n    confidence = 0.9;\n  }\n\n  // RE - Angled up, fingers together\n  else if (fingers.values.index > 0.7 && fingers.values.middle > 0.7 && fingers.values.ring > 0.7 && fingers.values.pinky > 0.7 && handDir.verticalAngle > 20 && handDir.verticalAngle < 70) {\n    sign = 're';\n    confidence = 0.9;\n  }\n\n  // MI - Completely flat hand\n  else if (fingers.values.index > 0.8 && fingers.values.middle > 0.8 && fingers.values.ring > 0.8 && fingers.values.pinky > 0.8 && Math.abs(handDir.verticalAngle) < 20 && palmDir.isDown) {\n    sign = 'mi';\n    confidence = 0.9;\n  }\n\n  // FA - Thumb out, others relaxed\n  else if (fingers.values.thumb > 0.7 && fingers.values.index > 0.3 && fingers.values.index < 0.7 && fingers.values.middle > 0.3 && fingers.values.middle < 0.7 && fingers.values.ring > 0.3 && fingers.values.ring < 0.7 && fingers.values.pinky > 0.3 && fingers.values.pinky < 0.7) {\n    sign = 'fa';\n    confidence = 0.9;\n  }\n\n  // SOL - Curved fingers to side, back of hand visible\n  else if (fingers.values.index > 0.4 &&\n  // Fingers curved but not closed\n  fingers.values.index < 0.8 &&\n  // Upper limit to ensure curve\n  fingers.values.middle > 0.4 && fingers.values.middle < 0.8 && fingers.values.ring > 0.4 && fingers.values.ring < 0.8 && fingers.values.pinky > 0.4 && fingers.values.pinky < 0.8 && Math.abs(handDir.direction.x) > 0.7 &&\n  // Hand pointing to side\n  palmDir.isSide) {\n    // Back of hand visible\n    sign = 'sol';\n    confidence = 0.9;\n  }\n\n  // LA - Curved fingers, palm down\n  else if (fingers.values.index > 0.4 && fingers.values.index < 0.7 && fingers.values.middle > 0.4 && fingers.values.middle < 0.7 && fingers.values.ring > 0.4 && fingers.values.ring < 0.7 && fingers.values.pinky > 0.4 && fingers.values.pinky < 0.7 && palmDir.isDown) {\n    sign = 'la';\n    confidence = 0.9;\n  }\n\n  // TI - Index up, others closed\n  else if (fingers.values.index > 0.8 && fingers.values.middle < 0.4 && fingers.values.ring < 0.4 && fingers.values.pinky < 0.4 && handDir.isPointingUp) {\n    sign = 'ti';\n    confidence = 0.9;\n  }\n  if (sign) {\n    console.log('Detected:', sign, 'with confidence:', confidence);\n  }\n  return {\n    sign,\n    confidence,\n    debug\n  };\n}","map":{"version":3,"names":["recognizeKodalySign","landmarks","length","fingers","analyzeFingers","handDir","getHandDirection","palmDir","getPalmDirection","debug","extensions","values","handDirection","verticalAngle","isPointingUp","isPointingDown","isPointingForward","isHorizontal","palmOrientation","isDown","isUp","isSide","sign","confidence","console","log","fingerValues","handAngle","palmDirection","thumb","index","middle","ring","pinky","Math","abs","direction","x"],"sources":["C:/Users/user/sol-fa-app/src/utils/kodalySignsDB.js"],"sourcesContent":["// ... (keep all the helper functions the same until the recognizeKodalySign function)\r\n\r\nexport function recognizeKodalySign(landmarks) {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    const fingers = analyzeFingers(landmarks);\r\n    const handDir = getHandDirection(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n\r\n    // Debug info - keep the same debug structure\r\n    const debug = {\r\n        extensions: fingers.values,\r\n        handDirection: {\r\n            verticalAngle: handDir.verticalAngle,\r\n            isPointingUp: handDir.isPointingUp,\r\n            isPointingDown: handDir.isPointingDown,\r\n            isPointingForward: handDir.isPointingForward,\r\n            isHorizontal: handDir.isHorizontal\r\n        },\r\n        palmOrientation: {\r\n            isDown: palmDir.isDown,\r\n            isUp: palmDir.isUp,\r\n            isSide: palmDir.isSide\r\n        }\r\n    };\r\n\r\n    let sign = null;\r\n    let confidence = 0;\r\n\r\n    // Log current values for debugging\r\n    console.log('Hand state:', {\r\n        fingerValues: fingers.values,\r\n        handAngle: handDir.verticalAngle,\r\n        palmDirection: palmDir\r\n    });\r\n\r\n    // DO - Tight fist\r\n    if (fingers.values.thumb < 0.4 &&    \r\n        fingers.values.index < 0.4 &&\r\n        fingers.values.middle < 0.4 &&\r\n        fingers.values.ring < 0.4 &&\r\n        fingers.values.pinky < 0.4) {\r\n        sign = 'do';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // RE - Angled up, fingers together\r\n    else if (fingers.values.index > 0.7 &&     \r\n             fingers.values.middle > 0.7 &&\r\n             fingers.values.ring > 0.7 &&\r\n             fingers.values.pinky > 0.7 &&\r\n             handDir.verticalAngle > 20 &&     \r\n             handDir.verticalAngle < 70) {\r\n        sign = 're';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // MI - Completely flat hand\r\n    else if (fingers.values.index > 0.8 &&     \r\n             fingers.values.middle > 0.8 &&\r\n             fingers.values.ring > 0.8 &&\r\n             fingers.values.pinky > 0.8 &&\r\n             Math.abs(handDir.verticalAngle) < 20 && \r\n             palmDir.isDown) {\r\n        sign = 'mi';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // FA - Thumb out, others relaxed\r\n    else if (fingers.values.thumb > 0.7 &&     \r\n             fingers.values.index > 0.3 &&     \r\n             fingers.values.index < 0.7 &&     \r\n             fingers.values.middle > 0.3 &&     \r\n             fingers.values.middle < 0.7 &&\r\n             fingers.values.ring > 0.3 &&\r\n             fingers.values.ring < 0.7 &&\r\n             fingers.values.pinky > 0.3 &&\r\n             fingers.values.pinky < 0.7) {\r\n        sign = 'fa';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // SOL - Curved fingers to side, back of hand visible\r\n    else if (fingers.values.index > 0.4 &&     // Fingers curved but not closed\r\n             fingers.values.index < 0.8 &&     // Upper limit to ensure curve\r\n             fingers.values.middle > 0.4 &&\r\n             fingers.values.middle < 0.8 &&\r\n             fingers.values.ring > 0.4 &&\r\n             fingers.values.ring < 0.8 &&\r\n             fingers.values.pinky > 0.4 &&\r\n             fingers.values.pinky < 0.8 &&\r\n             Math.abs(handDir.direction.x) > 0.7 && // Hand pointing to side\r\n             palmDir.isSide) {                      // Back of hand visible\r\n        sign = 'sol';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // LA - Curved fingers, palm down\r\n    else if (fingers.values.index > 0.4 &&     \r\n             fingers.values.index < 0.7 &&     \r\n             fingers.values.middle > 0.4 &&\r\n             fingers.values.middle < 0.7 &&\r\n             fingers.values.ring > 0.4 &&\r\n             fingers.values.ring < 0.7 &&\r\n             fingers.values.pinky > 0.4 &&\r\n             fingers.values.pinky < 0.7 &&\r\n             palmDir.isDown) {\r\n        sign = 'la';\r\n        confidence = 0.9;\r\n    }\r\n    \r\n    // TI - Index up, others closed\r\n    else if (fingers.values.index > 0.8 &&     \r\n             fingers.values.middle < 0.4 &&     \r\n             fingers.values.ring < 0.4 &&\r\n             fingers.values.pinky < 0.4 &&\r\n             handDir.isPointingUp) {\r\n        sign = 'ti';\r\n        confidence = 0.9;\r\n    }\r\n\r\n    if (sign) {\r\n        console.log('Detected:', sign, 'with confidence:', confidence);\r\n    }\r\n\r\n    return {\r\n        sign,\r\n        confidence,\r\n        debug\r\n    };\r\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}