{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandDetection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n\n    // Initialize MediaPipe Hands\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n\n    // Configure MediaPipe Hands\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      // We only need one hand for Kodaly signs\n      modelComplexity: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n\n    // Set up the handler for hand detection results\n    handsRef.current.onResults(onResults);\n\n    // Initialize camera\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start();\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n    };\n  }, []);\n  const onResults = results => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the camera feed on the canvas\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Draw hand landmarks\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        // Draw the hand connections\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        // Draw the landmarks\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          display: 'none'\n        },\n        width: 640,\n        height: 480\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 640,\n        height: 480,\n        style: {\n          transform: 'scaleX(-1)' // Mirror the display\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hand Symbol Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Position your hand clearly in front of the camera to begin detection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(HandDetection, \"70ynQ/DmSbFI6lM7LPrRprMPntQ=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","Webcam","hands","camera","drawConnectors","drawLandmarks","jsxDEV","_jsxDEV","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","current","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","Camera","video","onFrame","send","image","width","height","start","stop","close","results","canvas","ctx","getContext","clearRect","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","transform","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport './HandDetection.css';\r\n\r\nconst HandDetection = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        // Initialize MediaPipe Hands\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        // Configure MediaPipe Hands\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1, // We only need one hand for Kodaly signs\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.5,\r\n            minTrackingConfidence: 0.5\r\n        });\r\n\r\n        // Set up the handler for hand detection results\r\n        handsRef.current.onResults(onResults);\r\n\r\n        // Initialize camera\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start();\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onResults = (results) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw the camera feed on the canvas\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        // Draw hand landmarks\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                // Draw the hand connections\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                // Draw the landmarks\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"camera-canvas-container\">\r\n                <Webcam\r\n                    ref={webcamRef}\r\n                    style={{ display: 'none' }}\r\n                    width={640}\r\n                    height={480}\r\n                />\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={640}\r\n                    height={480}\r\n                    style={{\r\n                        transform: 'scaleX(-1)'  // Mirror the display\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"instructions\">\r\n                <h2>Hand Symbol Instructions</h2>\r\n                <p>Position your hand clearly in front of the camera to begin detection.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}