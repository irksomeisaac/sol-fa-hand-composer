{"ast":null,"code":"// Kodály hand sign recognition system based on reference images\nconst fingerJointPairs = {\n  thumb: [1, 2, 3, 4],\n  index: [5, 6, 7, 8],\n  middle: [9, 10, 11, 12],\n  ring: [13, 14, 15, 16],\n  pinky: [17, 18, 19, 20]\n};\nconst calculateFingerCurl = (landmarks, fingerIndices) => {\n  const joints = fingerIndices.map(idx => landmarks[idx]);\n  const baseToTip = distance(joints[0], joints[joints.length - 1]);\n  const totalLength = fingerIndices.slice(1).reduce((sum, _, i) => sum + distance(joints[i], joints[i + 1]), 0);\n  return 1 - baseToTip / totalLength; // 1 = fully curled, 0 = straight\n};\nconst distance = (p1, p2) => {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2) + Math.pow(p1.z - p2.z, 2));\n};\nconst getPalmDirection = landmarks => {\n  const wrist = landmarks[0];\n  const indexBase = landmarks[5];\n  const pinkyBase = landmarks[17];\n  const middle_tip = landmarks[12];\n\n  // Calculate palm normal vector\n  const v1 = {\n    x: indexBase.x - wrist.x,\n    y: indexBase.y - wrist.y,\n    z: indexBase.z - wrist.z\n  };\n  const v2 = {\n    x: pinkyBase.x - wrist.x,\n    y: pinkyBase.y - wrist.y,\n    z: pinkyBase.z - wrist.z\n  };\n\n  // Cross product for normal vector\n  const normal = {\n    x: v1.y * v2.z - v1.z * v2.y,\n    y: v1.z * v2.x - v1.x * v2.z,\n    z: v1.x * v2.y - v1.y * v2.x\n  };\n\n  // Normalize\n  const magnitude = Math.sqrt(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);\n  normal.x /= magnitude;\n  normal.y /= magnitude;\n  normal.z /= magnitude;\n  return {\n    normal,\n    isDownward: normal.y > 0.7,\n    isUpward: normal.y < -0.7,\n    isSideways: Math.abs(normal.x) > 0.7\n  };\n};\nconst getHandOrientation = landmarks => {\n  const wrist = landmarks[0];\n  const middle_base = landmarks[9];\n  const middle_tip = landmarks[12];\n\n  // Calculate hand direction vector\n  const direction = {\n    x: middle_tip.x - wrist.x,\n    y: middle_tip.y - wrist.y,\n    z: middle_tip.z - wrist.z\n  };\n\n  // Normalize\n  const magnitude = Math.sqrt(direction.x * direction.x + direction.y * direction.y + direction.z * direction.z);\n  direction.x /= magnitude;\n  direction.y /= magnitude;\n  direction.z /= magnitude;\n\n  // Calculate angles\n  const angleFromVertical = Math.acos(-direction.y) * (180 / Math.PI);\n  const angleFromHorizontal = Math.abs(90 - angleFromVertical);\n  return {\n    direction,\n    angleFromVertical,\n    angleFromHorizontal,\n    isVertical: angleFromVertical < 20 || angleFromVertical > 160,\n    isHorizontal: angleFromHorizontal < 20,\n    isDiagonal: angleFromVertical > 20 && angleFromVertical < 160 && angleFromHorizontal > 20\n  };\n};\nconst areFingersTogether = landmarks => {\n  const tipIndices = [8, 12, 16, 20]; // Index, Middle, Ring, Pinky tips\n  let maxDistance = 0;\n  for (let i = 0; i < tipIndices.length - 1; i++) {\n    const dist = distance(landmarks[tipIndices[i]], landmarks[tipIndices[i + 1]]);\n    maxDistance = Math.max(maxDistance, dist);\n  }\n  return maxDistance < 0.1;\n};\nexport const recognizeKodalySign = landmarks => {\n  if (!landmarks || landmarks.length < 21) return null;\n\n  // Calculate finger curls\n  const curls = {\n    thumb: calculateFingerCurl(landmarks, fingerJointPairs.thumb),\n    index: calculateFingerCurl(landmarks, fingerJointPairs.index),\n    middle: calculateFingerCurl(landmarks, fingerJointPairs.middle),\n    ring: calculateFingerCurl(landmarks, fingerJointPairs.ring),\n    pinky: calculateFingerCurl(landmarks, fingerJointPairs.pinky)\n  };\n  const orientation = getHandOrientation(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n  const fingersTogether = areFingersTogether(landmarks);\n  const fingersExtended = Object.values(curls).every(curl => curl < 0.3);\n  const fingersClosed = Object.values(curls).every(curl => curl > 0.7);\n\n  // Debug information\n  const debug = {\n    curls,\n    orientation,\n    palmDir,\n    fingersTogether,\n    fingersExtended,\n    fingersClosed\n  };\n\n  // Check for 'Do' - closed fist held horizontally\n  if (fingersClosed && orientation.isHorizontal) {\n    return {\n      sign: 'do',\n      confidence: 0.9,\n      debug\n    };\n  }\n\n  // Check for 'Re' - flat hand diagonal upward\n  if (fingersExtended && fingersTogether && orientation.isDiagonal && orientation.angleFromVertical < 90) {\n    return {\n      sign: 're',\n      confidence: 0.9,\n      debug\n    };\n  }\n\n  // Check for 'Mi' - flat hand horizontal\n  if (fingersExtended && fingersTogether && orientation.isHorizontal && palmDir.isDownward) {\n    return {\n      sign: 'mi',\n      confidence: 0.9,\n      debug\n    };\n  }\n\n  // Return debug information if no sign matched\n  return {\n    sign: null,\n    debug\n  };\n};\nexport const analyzeHand = landmarks => {\n  if (!landmarks || landmarks.length < 21) return null;\n  const curls = {\n    thumb: calculateFingerCurl(landmarks, fingerJointPairs.thumb),\n    index: calculateFingerCurl(landmarks, fingerJointPairs.index),\n    middle: calculateFingerCurl(landmarks, fingerJointPairs.middle),\n    ring: calculateFingerCurl(landmarks, fingerJointPairs.ring),\n    pinky: calculateFingerCurl(landmarks, fingerJointPairs.pinky)\n  };\n  const orientation = getHandOrientation(landmarks);\n  const palmDir = getPalmDirection(landmarks);\n  const fingersTogether = areFingersTogether(landmarks);\n  const fingersExtended = Object.values(curls).every(curl => curl < 0.3);\n  const fingersClosed = Object.values(curls).every(curl => curl > 0.7);\n  return {\n    fingerCurls: curls,\n    orientation: orientation,\n    palmDirection: palmDir,\n    fingersTogether: fingersTogether,\n    fingersExtended: fingersExtended,\n    fingersClosed: fingersClosed,\n    possibleSigns: {\n      isDo: fingersClosed && orientation.isHorizontal,\n      isRe: fingersExtended && fingersTogether && orientation.isDiagonal && orientation.angleFromVertical < 90,\n      isMi: fingersExtended && fingersTogether && orientation.isHorizontal && palmDir.isDownward\n    }\n  };\n};","map":{"version":3,"names":["fingerJointPairs","thumb","index","middle","ring","pinky","calculateFingerCurl","landmarks","fingerIndices","joints","map","idx","baseToTip","distance","length","totalLength","slice","reduce","sum","_","i","p1","p2","Math","sqrt","pow","x","y","z","getPalmDirection","wrist","indexBase","pinkyBase","middle_tip","v1","v2","normal","magnitude","isDownward","isUpward","isSideways","abs","getHandOrientation","middle_base","direction","angleFromVertical","acos","PI","angleFromHorizontal","isVertical","isHorizontal","isDiagonal","areFingersTogether","tipIndices","maxDistance","dist","max","recognizeKodalySign","curls","orientation","palmDir","fingersTogether","fingersExtended","Object","values","every","curl","fingersClosed","debug","sign","confidence","analyzeHand","fingerCurls","palmDirection","possibleSigns","isDo","isRe","isMi"],"sources":["C:/Users/user/sol-fa-app/src/utils/kodalySignsDB.js"],"sourcesContent":["// Kodály hand sign recognition system based on reference images\r\nconst fingerJointPairs = {\r\n    thumb: [1, 2, 3, 4],\r\n    index: [5, 6, 7, 8],\r\n    middle: [9, 10, 11, 12],\r\n    ring: [13, 14, 15, 16],\r\n    pinky: [17, 18, 19, 20]\r\n};\r\n\r\nconst calculateFingerCurl = (landmarks, fingerIndices) => {\r\n    const joints = fingerIndices.map(idx => landmarks[idx]);\r\n    const baseToTip = distance(joints[0], joints[joints.length - 1]);\r\n    const totalLength = fingerIndices.slice(1).reduce((sum, _, i) => \r\n        sum + distance(joints[i], joints[i + 1]), 0);\r\n    return 1 - (baseToTip / totalLength); // 1 = fully curled, 0 = straight\r\n};\r\n\r\nconst distance = (p1, p2) => {\r\n    return Math.sqrt(\r\n        Math.pow(p1.x - p2.x, 2) +\r\n        Math.pow(p1.y - p2.y, 2) +\r\n        Math.pow(p1.z - p2.z, 2)\r\n    );\r\n};\r\n\r\nconst getPalmDirection = (landmarks) => {\r\n    const wrist = landmarks[0];\r\n    const indexBase = landmarks[5];\r\n    const pinkyBase = landmarks[17];\r\n    const middle_tip = landmarks[12];\r\n\r\n    // Calculate palm normal vector\r\n    const v1 = {\r\n        x: indexBase.x - wrist.x,\r\n        y: indexBase.y - wrist.y,\r\n        z: indexBase.z - wrist.z\r\n    };\r\n    const v2 = {\r\n        x: pinkyBase.x - wrist.x,\r\n        y: pinkyBase.y - wrist.y,\r\n        z: pinkyBase.z - wrist.z\r\n    };\r\n\r\n    // Cross product for normal vector\r\n    const normal = {\r\n        x: v1.y * v2.z - v1.z * v2.y,\r\n        y: v1.z * v2.x - v1.x * v2.z,\r\n        z: v1.x * v2.y - v1.y * v2.x\r\n    };\r\n\r\n    // Normalize\r\n    const magnitude = Math.sqrt(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);\r\n    normal.x /= magnitude;\r\n    normal.y /= magnitude;\r\n    normal.z /= magnitude;\r\n\r\n    return {\r\n        normal,\r\n        isDownward: normal.y > 0.7,\r\n        isUpward: normal.y < -0.7,\r\n        isSideways: Math.abs(normal.x) > 0.7\r\n    };\r\n};\r\n\r\nconst getHandOrientation = (landmarks) => {\r\n    const wrist = landmarks[0];\r\n    const middle_base = landmarks[9];\r\n    const middle_tip = landmarks[12];\r\n\r\n    // Calculate hand direction vector\r\n    const direction = {\r\n        x: middle_tip.x - wrist.x,\r\n        y: middle_tip.y - wrist.y,\r\n        z: middle_tip.z - wrist.z\r\n    };\r\n\r\n    // Normalize\r\n    const magnitude = Math.sqrt(direction.x * direction.x + direction.y * direction.y + direction.z * direction.z);\r\n    direction.x /= magnitude;\r\n    direction.y /= magnitude;\r\n    direction.z /= magnitude;\r\n\r\n    // Calculate angles\r\n    const angleFromVertical = Math.acos(-direction.y) * (180 / Math.PI);\r\n    const angleFromHorizontal = Math.abs(90 - angleFromVertical);\r\n\r\n    return {\r\n        direction,\r\n        angleFromVertical,\r\n        angleFromHorizontal,\r\n        isVertical: angleFromVertical < 20 || angleFromVertical > 160,\r\n        isHorizontal: angleFromHorizontal < 20,\r\n        isDiagonal: angleFromVertical > 20 && angleFromVertical < 160 && angleFromHorizontal > 20\r\n    };\r\n};\r\n\r\nconst areFingersTogether = (landmarks) => {\r\n    const tipIndices = [8, 12, 16, 20]; // Index, Middle, Ring, Pinky tips\r\n    let maxDistance = 0;\r\n    \r\n    for (let i = 0; i < tipIndices.length - 1; i++) {\r\n        const dist = distance(landmarks[tipIndices[i]], landmarks[tipIndices[i + 1]]);\r\n        maxDistance = Math.max(maxDistance, dist);\r\n    }\r\n    \r\n    return maxDistance < 0.1;\r\n};\r\n\r\nexport const recognizeKodalySign = (landmarks) => {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    // Calculate finger curls\r\n    const curls = {\r\n        thumb: calculateFingerCurl(landmarks, fingerJointPairs.thumb),\r\n        index: calculateFingerCurl(landmarks, fingerJointPairs.index),\r\n        middle: calculateFingerCurl(landmarks, fingerJointPairs.middle),\r\n        ring: calculateFingerCurl(landmarks, fingerJointPairs.ring),\r\n        pinky: calculateFingerCurl(landmarks, fingerJointPairs.pinky)\r\n    };\r\n\r\n    const orientation = getHandOrientation(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n    const fingersTogether = areFingersTogether(landmarks);\r\n    const fingersExtended = Object.values(curls).every(curl => curl < 0.3);\r\n    const fingersClosed = Object.values(curls).every(curl => curl > 0.7);\r\n\r\n    // Debug information\r\n    const debug = {\r\n        curls,\r\n        orientation,\r\n        palmDir,\r\n        fingersTogether,\r\n        fingersExtended,\r\n        fingersClosed\r\n    };\r\n\r\n    // Check for 'Do' - closed fist held horizontally\r\n    if (fingersClosed && orientation.isHorizontal) {\r\n        return {\r\n            sign: 'do',\r\n            confidence: 0.9,\r\n            debug\r\n        };\r\n    }\r\n\r\n    // Check for 'Re' - flat hand diagonal upward\r\n    if (fingersExtended && \r\n        fingersTogether && \r\n        orientation.isDiagonal && \r\n        orientation.angleFromVertical < 90) {\r\n        return {\r\n            sign: 're',\r\n            confidence: 0.9,\r\n            debug\r\n        };\r\n    }\r\n\r\n    // Check for 'Mi' - flat hand horizontal\r\n    if (fingersExtended && \r\n        fingersTogether && \r\n        orientation.isHorizontal && \r\n        palmDir.isDownward) {\r\n        return {\r\n            sign: 'mi',\r\n            confidence: 0.9,\r\n            debug\r\n        };\r\n    }\r\n\r\n    // Return debug information if no sign matched\r\n    return {\r\n        sign: null,\r\n        debug\r\n    };\r\n};\r\n\r\nexport const analyzeHand = (landmarks) => {\r\n    if (!landmarks || landmarks.length < 21) return null;\r\n\r\n    const curls = {\r\n        thumb: calculateFingerCurl(landmarks, fingerJointPairs.thumb),\r\n        index: calculateFingerCurl(landmarks, fingerJointPairs.index),\r\n        middle: calculateFingerCurl(landmarks, fingerJointPairs.middle),\r\n        ring: calculateFingerCurl(landmarks, fingerJointPairs.ring),\r\n        pinky: calculateFingerCurl(landmarks, fingerJointPairs.pinky)\r\n    };\r\n\r\n    const orientation = getHandOrientation(landmarks);\r\n    const palmDir = getPalmDirection(landmarks);\r\n    const fingersTogether = areFingersTogether(landmarks);\r\n    const fingersExtended = Object.values(curls).every(curl => curl < 0.3);\r\n    const fingersClosed = Object.values(curls).every(curl => curl > 0.7);\r\n\r\n    return {\r\n        fingerCurls: curls,\r\n        orientation: orientation,\r\n        palmDirection: palmDir,\r\n        fingersTogether: fingersTogether,\r\n        fingersExtended: fingersExtended,\r\n        fingersClosed: fingersClosed,\r\n        possibleSigns: {\r\n            isDo: fingersClosed && orientation.isHorizontal,\r\n            isRe: fingersExtended && fingersTogether && orientation.isDiagonal && orientation.angleFromVertical < 90,\r\n            isMi: fingersExtended && fingersTogether && orientation.isHorizontal && palmDir.isDownward\r\n        }\r\n    };\r\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}