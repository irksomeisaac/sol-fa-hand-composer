{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign, kodalySigns } from '../utils/kodalySignsDB';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandDetection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const [detectionState, setDetectionState] = useState({\n    sign: null,\n    confidence: 0,\n    debug: null,\n    handPresent: false\n  });\n  useEffect(() => {\n    if (!webcamRef.current) return;\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7\n    });\n    handsRef.current.onResults(onResults);\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start();\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n    };\n  }, []);\n  const onResults = results => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n        const mirroredLandmarks = landmarks.map(landmark => ({\n          ...landmark,\n          x: 1 - landmark.x\n        }));\n        const recognition = recognizeKodalySign(mirroredLandmarks);\n        setDetectionState({\n          ...recognition,\n          handPresent: true\n        });\n      }\n    } else {\n      setDetectionState({\n        sign: null,\n        confidence: 0,\n        debug: null,\n        handPresent: false\n      });\n    }\n    ctx.restore();\n  };\n  const renderDebugInfo = () => {\n    if (!detectionState.handPresent) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message\",\n          children: \"No Hand Detected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-data\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for hand to appear in frame...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: detectionState.sign ? `Detected: ${detectionState.sign.toUpperCase()} (${Math.round(detectionState.confidence * 100)}% confident)` : \"Hand Detected - No Sign Recognized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hand Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), detectionState.debug && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Finger Extensions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), Object.entries(detectionState.debug.extensions).map(([finger, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"debug-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [finger, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"debug-bar\",\n                style: {\n                  width: `${value * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(value * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this)]\n            }, finger, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Palm Orientation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: detectionState.debug.palmOrientation.isDown ? \"Down\" : detectionState.debug.palmOrientation.isUp ? \"Up\" : detectionState.debug.palmOrientation.isSide ? \"Side\" : \"Neutral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Index Finger:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Angle from vertical: \", Math.round(detectionState.debug.indexDirection.verticalAngle), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Direction: \", detectionState.debug.indexDirection.isPointingUp ? \"Up\" : detectionState.debug.indexDirection.isPointingDown ? \"Down\" : detectionState.debug.indexDirection.isHorizontal ? \"Horizontal\" : \"Other\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-canvas-container\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          style: {\n            display: 'none'\n          },\n          width: 640,\n          height: 480,\n          mirrored: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), detectionState.sign && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: detectionState.sign.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), renderDebugInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(HandDetection, \"0n3kBpvBnKtiOoK+WTKt7n0Wurk=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","kodalySigns","jsxDEV","_jsxDEV","Fragment","_Fragment","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","detectionState","setDetectionState","sign","confidence","debug","handPresent","current","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","Camera","video","onFrame","send","image","width","height","start","stop","close","results","canvas","ctx","getContext","clearRect","save","scale","translate","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","mirroredLandmarks","map","landmark","x","recognition","restore","renderDebugInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","Math","round","Object","entries","extensions","finger","value","style","palmOrientation","isDown","isUp","isSide","indexDirection","verticalAngle","isPointingUp","isPointingDown","isHorizontal","ref","display","mirrored","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign, kodalySigns } from '../utils/kodalySignsDB';\r\nimport './HandDetection.css';\r\n\r\nconst HandDetection = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const [detectionState, setDetectionState] = useState({\r\n        sign: null,\r\n        confidence: 0,\r\n        debug: null,\r\n        handPresent: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        handsRef.current.onResults(onResults);\r\n\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start();\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onResults = (results) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n        ctx.scale(-1, 1);\r\n        ctx.translate(-canvas.width, 0);\r\n\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                const mirroredLandmarks = landmarks.map(landmark => ({\r\n                    ...landmark,\r\n                    x: 1 - landmark.x\r\n                }));\r\n\r\n                const recognition = recognizeKodalySign(mirroredLandmarks);\r\n                setDetectionState({\r\n                    ...recognition,\r\n                    handPresent: true\r\n                });\r\n            }\r\n        } else {\r\n            setDetectionState({\r\n                sign: null,\r\n                confidence: 0,\r\n                debug: null,\r\n                handPresent: false\r\n            });\r\n        }\r\n\r\n        ctx.restore();\r\n    };\r\n\r\n    const renderDebugInfo = () => {\r\n        if (!detectionState.handPresent) {\r\n            return (\r\n                <div className=\"debug-panel\">\r\n                    <div className=\"status-message\">No Hand Detected</div>\r\n                    <div className=\"debug-data\">\r\n                        <p>Waiting for hand to appear in frame...</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"debug-panel\">\r\n                <div className=\"status-message\">\r\n                    {detectionState.sign \r\n                        ? `Detected: ${detectionState.sign.toUpperCase()} (${Math.round(detectionState.confidence * 100)}% confident)`\r\n                        : \"Hand Detected - No Sign Recognized\"}\r\n                </div>\r\n                <div className=\"debug-data\">\r\n                    <h3>Hand Analysis:</h3>\r\n                    {detectionState.debug && (\r\n                        <>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Finger Extensions:</h4>\r\n                                {Object.entries(detectionState.debug.extensions).map(([finger, value]) => (\r\n                                    <div key={finger} className=\"debug-item\">\r\n                                        <span>{finger}:</span>\r\n                                        <div className=\"debug-bar\" style={{width: `${value * 100}%`}}></div>\r\n                                        <span>{Math.round(value * 100)}%</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Palm Orientation:</h4>\r\n                                <p>\r\n                                    {detectionState.debug.palmOrientation.isDown ? \"Down\" : \r\n                                     detectionState.debug.palmOrientation.isUp ? \"Up\" : \r\n                                     detectionState.debug.palmOrientation.isSide ? \"Side\" : \"Neutral\"}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"debug-section\">\r\n                                <h4>Index Finger:</h4>\r\n                                <p>Angle from vertical: {Math.round(detectionState.debug.indexDirection.verticalAngle)}°</p>\r\n                                <p>Direction: {\r\n                                    detectionState.debug.indexDirection.isPointingUp ? \"Up\" :\r\n                                    detectionState.debug.indexDirection.isPointingDown ? \"Down\" :\r\n                                    detectionState.debug.indexDirection.isHorizontal ? \"Horizontal\" : \"Other\"\r\n                                }</p>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"main-container\">\r\n                <div className=\"camera-canvas-container\">\r\n                    <Webcam\r\n                        ref={webcamRef}\r\n                        style={{ display: 'none' }}\r\n                        width={640}\r\n                        height={480}\r\n                        mirrored={false}\r\n                    />\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={640}\r\n                        height={480}\r\n                    />\r\n                    {detectionState.sign && (\r\n                        <div className=\"sign-indicator\">\r\n                            <h2>{detectionState.sign.toUpperCase()}</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {renderDebugInfo()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}