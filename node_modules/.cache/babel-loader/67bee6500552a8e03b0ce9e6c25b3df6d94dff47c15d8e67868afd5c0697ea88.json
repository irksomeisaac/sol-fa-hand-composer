{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign, kodalySigns } from '../utils/kodalySignsDB';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandDetection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const [detectedSign, setDetectedSign] = useState(null);\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [cameraReady, setCameraReady] = useState(false);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n\n    // Initialize MediaPipe Hands\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n\n    // Configure MediaPipe Hands for top-down view\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      // Increased for more stable detection\n      minTrackingConfidence: 0.7\n    });\n\n    // Set up the handler for hand detection results\n    handsRef.current.onResults(onResults);\n\n    // Initialize camera\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start().then(() => setCameraReady(true)).catch(err => console.error(\"Error starting camera:\", err));\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n    };\n  }, []);\n  const onResults = results => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the camera feed on the canvas\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Draw hand landmarks and recognize signs\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        // Draw the hand connections\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        // Draw the landmarks\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n\n        // Recognize the Kodaly sign\n        const recognition = recognizeKodalySign(landmarks);\n        setDetectedSign(recognition);\n      }\n    } else {\n      setDetectedSign(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          display: 'none'\n        },\n        width: 640,\n        height: 480,\n        mirrored: false // Don't mirror the image for top-down view\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 640,\n        height: 480,\n        style: {\n          transform: 'scaleY(-1)' // Flip vertically for top-down view\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), detectedSign && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detected-sign\",\n        style: {\n          backgroundColor: `rgba(0, 0, 0, ${detectedSign.confidence * 0.9 + 0.1})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: detectedSign.sign.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kodalySigns[detectedSign.sign].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confidence-bar\",\n          style: {\n            width: `${detectedSign.confidence * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInstructions(!showInstructions),\n        children: [showInstructions ? 'Hide' : 'Show', \" Instructions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), !cameraReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-status\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Initializing camera... Please allow camera access when prompted.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), showInstructions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Kod\\xE1ly Hand Signs Guide (Top-Down View)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signs-guide\",\n        children: Object.entries(kodalySigns).map(([note, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, note, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usage-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tips for Best Recognition:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Position your hands below the camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keep your hands within the camera frame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Make clear, distinct hand shapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure good lighting on your hands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(HandDetection, \"FZvlL2/VVMwnDvCON7UnphSMkNw=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","kodalySigns","jsxDEV","_jsxDEV","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","detectedSign","setDetectedSign","showInstructions","setShowInstructions","cameraReady","setCameraReady","current","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","Camera","video","onFrame","send","image","width","height","start","then","catch","err","console","error","stop","close","results","canvas","ctx","getContext","clearRect","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","recognition","className","children","ref","style","display","mirrored","fileName","_jsxFileName","lineNumber","columnNumber","transform","backgroundColor","confidence","sign","toUpperCase","description","onClick","Object","entries","map","note","data","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign, kodalySigns } from '../utils/kodalySignsDB';\r\nimport './HandDetection.css';\r\n\r\nconst HandDetection = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const [detectedSign, setDetectedSign] = useState(null);\r\n    const [showInstructions, setShowInstructions] = useState(true);\r\n    const [cameraReady, setCameraReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        // Initialize MediaPipe Hands\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        // Configure MediaPipe Hands for top-down view\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7, // Increased for more stable detection\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        // Set up the handler for hand detection results\r\n        handsRef.current.onResults(onResults);\r\n\r\n        // Initialize camera\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start()\r\n                .then(() => setCameraReady(true))\r\n                .catch((err) => console.error(\"Error starting camera:\", err));\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onResults = (results) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw the camera feed on the canvas\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        // Draw hand landmarks and recognize signs\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                // Draw the hand connections\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                // Draw the landmarks\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                // Recognize the Kodaly sign\r\n                const recognition = recognizeKodalySign(landmarks);\r\n                setDetectedSign(recognition);\r\n            }\r\n        } else {\r\n            setDetectedSign(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"camera-canvas-container\">\r\n                <Webcam\r\n                    ref={webcamRef}\r\n                    style={{ display: 'none' }}\r\n                    width={640}\r\n                    height={480}\r\n                    mirrored={false} // Don't mirror the image for top-down view\r\n                />\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={640}\r\n                    height={480}\r\n                    style={{\r\n                        transform: 'scaleY(-1)' // Flip vertically for top-down view\r\n                    }}\r\n                />\r\n                {detectedSign && (\r\n                    <div className=\"detected-sign\" style={{\r\n                        backgroundColor: `rgba(0, 0, 0, ${detectedSign.confidence * 0.9 + 0.1})`\r\n                    }}>\r\n                        <h3>{detectedSign.sign.toUpperCase()}</h3>\r\n                        <p>{kodalySigns[detectedSign.sign].description}</p>\r\n                        <div className=\"confidence-bar\" style={{\r\n                            width: `${detectedSign.confidence * 100}%`\r\n                        }}></div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <div className=\"controls\">\r\n                <button onClick={() => setShowInstructions(!showInstructions)}>\r\n                    {showInstructions ? 'Hide' : 'Show'} Instructions\r\n                </button>\r\n            </div>\r\n\r\n            {!cameraReady && (\r\n                <div className=\"camera-status\">\r\n                    <p>Initializing camera... Please allow camera access when prompted.</p>\r\n                </div>\r\n            )}\r\n\r\n            {showInstructions && (\r\n                <div className=\"instructions\">\r\n                    <h2>Kodály Hand Signs Guide (Top-Down View)</h2>\r\n                    <div className=\"signs-guide\">\r\n                        {Object.entries(kodalySigns).map(([note, data]) => (\r\n                            <div key={note} className=\"sign-item\">\r\n                                <h3>{note.toUpperCase()}</h3>\r\n                                <p>{data.description}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"usage-tips\">\r\n                        <h3>Tips for Best Recognition:</h3>\r\n                        <ul>\r\n                            <li>Position your hands below the camera</li>\r\n                            <li>Keep your hands within the camera frame</li>\r\n                            <li>Make clear, distinct hand shapes</li>\r\n                            <li>Ensure good lighting on your hands</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandDetection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AACzC,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AACjD,SAASC,cAAc,EAAEC,aAAa,QAAQ,0BAA0B;AACxE,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,wBAAwB;AACzE,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMe,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,QAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMiB,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,SAAS,CAACU,OAAO,EAAE;;IAExB;IACAR,QAAQ,CAACQ,OAAO,GAAG,IAAIpB,KAAK,CAACqB,KAAK,CAAC;MAC/BC,UAAU,EAAGC,IAAI,IAAK;QAClB,OAAO,iDAAiDA,IAAI,EAAE;MAClE;IACJ,CAAC,CAAC;;IAEF;IACAX,QAAQ,CAACQ,OAAO,CAACI,UAAU,CAAC;MACxBC,WAAW,EAAE,CAAC;MACdC,eAAe,EAAE,CAAC;MAClBC,sBAAsB,EAAE,GAAG;MAAE;MAC7BC,qBAAqB,EAAE;IAC3B,CAAC,CAAC;;IAEF;IACAhB,QAAQ,CAACQ,OAAO,CAACS,SAAS,CAACA,SAAS,CAAC;;IAErC;IACA,IAAInB,SAAS,CAACU,OAAO,EAAE;MACnBP,SAAS,CAACO,OAAO,GAAG,IAAInB,MAAM,CAAC6B,MAAM,CAACpB,SAAS,CAACU,OAAO,CAACW,KAAK,EAAE;QAC3DC,OAAO,EAAE,MAAAA,CAAA,KAAY;UACjB,IAAItB,SAAS,CAACU,OAAO,IAAIR,QAAQ,CAACQ,OAAO,EAAE;YACvC,MAAMR,QAAQ,CAACQ,OAAO,CAACa,IAAI,CAAC;cACxBC,KAAK,EAAExB,SAAS,CAACU,OAAO,CAACW;YAC7B,CAAC,CAAC;UACN;QACJ,CAAC;QACDI,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;MACZ,CAAC,CAAC;MACFvB,SAAS,CAACO,OAAO,CAACiB,KAAK,CAAC,CAAC,CACpBC,IAAI,CAAC,MAAMnB,cAAc,CAAC,IAAI,CAAC,CAAC,CAChCoB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;IACrE;IAEA,OAAO,MAAM;MACT,IAAI3B,SAAS,CAACO,OAAO,EAAE;QACnBP,SAAS,CAACO,OAAO,CAACuB,IAAI,CAAC,CAAC;MAC5B;MACA,IAAI/B,QAAQ,CAACQ,OAAO,EAAE;QAClBR,QAAQ,CAACQ,OAAO,CAACwB,KAAK,CAAC,CAAC;MAC5B;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMf,SAAS,GAAIgB,OAAO,IAAK;IAC3B,MAAMC,MAAM,GAAGnC,SAAS,CAACS,OAAO;IAChC,MAAM2B,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAACX,KAAK,EAAEW,MAAM,CAACV,MAAM,CAAC;;IAEhD;IACA,IAAIS,OAAO,CAACX,KAAK,EAAE;MACfa,GAAG,CAACG,SAAS,CAACL,OAAO,CAACX,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEY,MAAM,CAACX,KAAK,EAAEW,MAAM,CAACV,MAAM,CAAC;IACnE;;IAEA;IACA,IAAIS,OAAO,CAACM,kBAAkB,IAAIN,OAAO,CAACM,kBAAkB,CAACC,MAAM,GAAG,CAAC,EAAE;MACrE,KAAK,MAAMC,SAAS,IAAIR,OAAO,CAACM,kBAAkB,EAAE;QAChD;QACAjD,cAAc,CAAC6C,GAAG,EAAEM,SAAS,EAAErD,KAAK,CAACsD,gBAAgB,EAAE;UACnDC,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE;QACf,CAAC,CAAC;QACF;QACArD,aAAa,CAAC4C,GAAG,EAAEM,SAAS,EAAE;UAC1BE,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE;QACf,CAAC,CAAC;;QAEF;QACA,MAAMC,WAAW,GAAGrD,mBAAmB,CAACiD,SAAS,CAAC;QAClDtC,eAAe,CAAC0C,WAAW,CAAC;MAChC;IACJ,CAAC,MAAM;MACH1C,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKmD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BpD,OAAA;MAAKmD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACpCpD,OAAA,CAACR,MAAM;QACH6D,GAAG,EAAElD,SAAU;QACfmD,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAC3B3B,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZ2B,QAAQ,EAAE,KAAM,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACF5D,OAAA;QACIqD,GAAG,EAAEjD,SAAU;QACfwB,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZyB,KAAK,EAAE;UACHO,SAAS,EAAE,YAAY,CAAC;QAC5B;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACDrD,YAAY,iBACTP,OAAA;QAAKmD,SAAS,EAAC,eAAe;QAACG,KAAK,EAAE;UAClCQ,eAAe,EAAE,iBAAiBvD,YAAY,CAACwD,UAAU,GAAG,GAAG,GAAG,GAAG;QACzE,CAAE;QAAAX,QAAA,gBACEpD,OAAA;UAAAoD,QAAA,EAAK7C,YAAY,CAACyD,IAAI,CAACC,WAAW,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1C5D,OAAA;UAAAoD,QAAA,EAAItD,WAAW,CAACS,YAAY,CAACyD,IAAI,CAAC,CAACE;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnD5D,OAAA;UAAKmD,SAAS,EAAC,gBAAgB;UAACG,KAAK,EAAE;YACnC1B,KAAK,EAAE,GAAGrB,YAAY,CAACwD,UAAU,GAAG,GAAG;UAC3C;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN5D,OAAA;MAAKmD,SAAS,EAAC,UAAU;MAAAC,QAAA,eACrBpD,OAAA;QAAQmE,OAAO,EAAEA,CAAA,KAAMzD,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;QAAA2C,QAAA,GACzD3C,gBAAgB,GAAG,MAAM,GAAG,MAAM,EAAC,eACxC;MAAA;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAEL,CAACjD,WAAW,iBACTX,OAAA;MAAKmD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BpD,OAAA;QAAAoD,QAAA,EAAG;MAAgE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACR,EAEAnD,gBAAgB,iBACbT,OAAA;MAAKmD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBpD,OAAA;QAAAoD,QAAA,EAAI;MAAuC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChD5D,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,EACvBgB,MAAM,CAACC,OAAO,CAACvE,WAAW,CAAC,CAACwE,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,kBAC1CxE,OAAA;UAAgBmD,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACjCpD,OAAA;YAAAoD,QAAA,EAAKmB,IAAI,CAACN,WAAW,CAAC;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B5D,OAAA;YAAAoD,QAAA,EAAIoB,IAAI,CAACN;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFnBW,IAAI;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5D,OAAA;QAAKmD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBpD,OAAA;UAAAoD,QAAA,EAAI;QAA0B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnC5D,OAAA;UAAAoD,QAAA,gBACIpD,OAAA;YAAAoD,QAAA,EAAI;UAAoC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7C5D,OAAA;YAAAoD,QAAA,EAAI;UAAuC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChD5D,OAAA;YAAAoD,QAAA,EAAI;UAAgC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzC5D,OAAA;YAAAoD,QAAA,EAAI;UAAkC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1D,EAAA,CAhKID,aAAa;AAAAwE,EAAA,GAAbxE,aAAa;AAkKnB,eAAeA,aAAa;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}