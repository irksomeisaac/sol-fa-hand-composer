{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\VoiceController.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { audioPlayer } from '../utils/audioUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VoiceController({\n  currentNote,\n  onCompositionUpdate\n}) {\n  _s();\n  const [voiceState, setVoiceState] = useState({\n    isActive: false,\n    lastCommand: null,\n    isSupported: false\n  });\n  const [composition, setComposition] = useState({\n    notes: [],\n    currentOctave: 4\n  });\n  const voiceRecognitionRef = useRef(null);\n  const handleVoiceCommand = transcript => {\n    console.log('Voice command:', transcript);\n    if (transcript.includes('add') && currentNote) {\n      const newNote = {\n        note: currentNote,\n        octave: composition.currentOctave,\n        timestamp: Date.now()\n      };\n      const updatedComposition = {\n        ...composition,\n        notes: [...composition.notes, newNote]\n      };\n      setComposition(updatedComposition);\n      audioPlayer.playUIFeedback(1200, 200);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}`\n      }));\n      onCompositionUpdate === null || onCompositionUpdate === void 0 ? void 0 : onCompositionUpdate(updatedComposition);\n    } else if (transcript.includes('octave up') || transcript.includes('higher')) {\n      const newOctave = Math.min(composition.currentOctave + 1, 7);\n      const updatedComposition = {\n        ...composition,\n        currentOctave: newOctave\n      };\n      setComposition(updatedComposition);\n      audioPlayer.playUIFeedback(1000);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave ${newOctave}`\n      }));\n      onCompositionUpdate === null || onCompositionUpdate === void 0 ? void 0 : onCompositionUpdate(updatedComposition);\n    } else if (transcript.includes('octave down') || transcript.includes('lower')) {\n      const newOctave = Math.max(composition.currentOctave - 1, 2);\n      const updatedComposition = {\n        ...composition,\n        currentOctave: newOctave\n      };\n      setComposition(updatedComposition);\n      audioPlayer.playUIFeedback(600);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: `Octave ${newOctave}`\n      }));\n      onCompositionUpdate === null || onCompositionUpdate === void 0 ? void 0 : onCompositionUpdate(updatedComposition);\n    } else if (transcript.includes('play') || transcript.includes('playback')) {\n      playComposition();\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Playing composition'\n      }));\n    } else if (transcript.includes('clear') || transcript.includes('reset')) {\n      const updatedComposition = {\n        ...composition,\n        notes: []\n      };\n      setComposition(updatedComposition);\n      audioPlayer.playUIFeedback(400, 300);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Composition cleared'\n      }));\n      onCompositionUpdate === null || onCompositionUpdate === void 0 ? void 0 : onCompositionUpdate(updatedComposition);\n    } else if (transcript.includes('undo')) {\n      const updatedComposition = {\n        ...composition,\n        notes: composition.notes.slice(0, -1)\n      };\n      setComposition(updatedComposition);\n      audioPlayer.playUIFeedback(500);\n      setVoiceState(prev => ({\n        ...prev,\n        lastCommand: 'Last note removed'\n      }));\n      onCompositionUpdate === null || onCompositionUpdate === void 0 ? void 0 : onCompositionUpdate(updatedComposition);\n    }\n  };\n  const playComposition = () => {\n    if (composition.notes.length === 0) {\n      audioPlayer.playUIFeedback(400, 300);\n      return;\n    }\n    composition.notes.forEach((noteItem, index) => {\n      setTimeout(() => {\n        audioPlayer.playNote(noteItem.note, noteItem.octave);\n        setTimeout(() => audioPlayer.stopNote(), 400);\n      }, index * 500);\n    });\n  };\n  useEffect(() => {\n    // Setup voice recognition\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      voiceRecognitionRef.current = new SpeechRecognition();\n      voiceRecognitionRef.current.continuous = true;\n      voiceRecognitionRef.current.interimResults = false;\n      voiceRecognitionRef.current.lang = 'en-US';\n      voiceRecognitionRef.current.onresult = event => {\n        const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase().trim();\n        handleVoiceCommand(transcript);\n      };\n      voiceRecognitionRef.current.onerror = event => {\n        console.log('Voice error:', event.error);\n        if (event.error === 'no-speech') {\n          setTimeout(() => {\n            try {\n              voiceRecognitionRef.current.start();\n            } catch (e) {}\n          }, 1000);\n        }\n      };\n      voiceRecognitionRef.current.onend = () => {\n        setTimeout(() => {\n          try {\n            voiceRecognitionRef.current.start();\n          } catch (e) {}\n        }, 100);\n      };\n\n      // Auto-start voice recognition\n      setTimeout(() => {\n        try {\n          voiceRecognitionRef.current.start();\n          setVoiceState(prev => ({\n            ...prev,\n            isActive: true,\n            isSupported: true\n          }));\n          console.log('Voice recognition started');\n        } catch (error) {\n          console.error('Voice recognition failed:', error);\n          setVoiceState(prev => ({\n            ...prev,\n            isSupported: true,\n            isActive: false\n          }));\n        }\n      }, 2000);\n      setVoiceState(prev => ({\n        ...prev,\n        isSupported: true\n      }));\n    }\n    return () => {\n      if (voiceRecognitionRef.current) {\n        voiceRecognitionRef.current.stop();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-controller\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `voice-indicator ${voiceState.isActive ? 'active' : 'inactive'}`,\n        children: voiceState.isSupported ? voiceState.isActive ? '🎤 Voice Active' : '🎤 Starting...' : '❌ Voice Not Supported'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), voiceState.lastCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-command\",\n        children: voiceState.lastCommand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"composition-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Composition (\", composition.notes.length, \" notes)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Octave: \", composition.currentOctave]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), composition.notes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-notes\",\n        children: [\"Recent: \", composition.notes.slice(-3).map(n => `${n.note.toUpperCase()}${n.octave}`).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-commands\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Voice Commands:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\\"Add\\\" - Add current note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\\"Octave up/down\\\" - Change octave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\\"Play\\\" - Play composition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\\"Clear\\\" - Clear all notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\\"Undo\\\" - Remove last note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(VoiceController, \"vLRiOLPLjvoRVs73j76mykqcDSE=\");\n_c = VoiceController;\nexport default VoiceController;\nvar _c;\n$RefreshReg$(_c, \"VoiceController\");","map":{"version":3,"names":["React","useRef","useEffect","useState","audioPlayer","jsxDEV","_jsxDEV","VoiceController","currentNote","onCompositionUpdate","_s","voiceState","setVoiceState","isActive","lastCommand","isSupported","composition","setComposition","notes","currentOctave","voiceRecognitionRef","handleVoiceCommand","transcript","console","log","includes","newNote","note","octave","timestamp","Date","now","updatedComposition","playUIFeedback","prev","toUpperCase","newOctave","Math","min","max","playComposition","slice","length","forEach","noteItem","index","setTimeout","playNote","stopNote","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","results","toLowerCase","trim","onerror","error","start","e","onend","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","n","join","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/VoiceController.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\n\r\nfunction VoiceController({ currentNote, onCompositionUpdate }) {\r\n    const [voiceState, setVoiceState] = useState({\r\n        isActive: false,\r\n        lastCommand: null,\r\n        isSupported: false\r\n    });\r\n    \r\n    const [composition, setComposition] = useState({\r\n        notes: [],\r\n        currentOctave: 4\r\n    });\r\n    \r\n    const voiceRecognitionRef = useRef(null);\r\n\r\n    const handleVoiceCommand = (transcript) => {\r\n        console.log('Voice command:', transcript);\r\n        \r\n        if (transcript.includes('add') && currentNote) {\r\n            const newNote = {\r\n                note: currentNote,\r\n                octave: composition.currentOctave,\r\n                timestamp: Date.now()\r\n            };\r\n            const updatedComposition = {\r\n                ...composition,\r\n                notes: [...composition.notes, newNote]\r\n            };\r\n            setComposition(updatedComposition);\r\n            audioPlayer.playUIFeedback(1200, 200);\r\n            setVoiceState(prev => ({ \r\n                ...prev, \r\n                lastCommand: `Added ${currentNote.toUpperCase()}${composition.currentOctave}` \r\n            }));\r\n            onCompositionUpdate?.(updatedComposition);\r\n        }\r\n        else if (transcript.includes('octave up') || transcript.includes('higher')) {\r\n            const newOctave = Math.min(composition.currentOctave + 1, 7);\r\n            const updatedComposition = { ...composition, currentOctave: newOctave };\r\n            setComposition(updatedComposition);\r\n            audioPlayer.playUIFeedback(1000);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave ${newOctave}` }));\r\n            onCompositionUpdate?.(updatedComposition);\r\n        }\r\n        else if (transcript.includes('octave down') || transcript.includes('lower')) {\r\n            const newOctave = Math.max(composition.currentOctave - 1, 2);\r\n            const updatedComposition = { ...composition, currentOctave: newOctave };\r\n            setComposition(updatedComposition);\r\n            audioPlayer.playUIFeedback(600);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: `Octave ${newOctave}` }));\r\n            onCompositionUpdate?.(updatedComposition);\r\n        }\r\n        else if (transcript.includes('play') || transcript.includes('playback')) {\r\n            playComposition();\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Playing composition' }));\r\n        }\r\n        else if (transcript.includes('clear') || transcript.includes('reset')) {\r\n            const updatedComposition = { ...composition, notes: [] };\r\n            setComposition(updatedComposition);\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Composition cleared' }));\r\n            onCompositionUpdate?.(updatedComposition);\r\n        }\r\n        else if (transcript.includes('undo')) {\r\n            const updatedComposition = {\r\n                ...composition,\r\n                notes: composition.notes.slice(0, -1)\r\n            };\r\n            setComposition(updatedComposition);\r\n            audioPlayer.playUIFeedback(500);\r\n            setVoiceState(prev => ({ ...prev, lastCommand: 'Last note removed' }));\r\n            onCompositionUpdate?.(updatedComposition);\r\n        }\r\n    };\r\n\r\n    const playComposition = () => {\r\n        if (composition.notes.length === 0) {\r\n            audioPlayer.playUIFeedback(400, 300);\r\n            return;\r\n        }\r\n\r\n        composition.notes.forEach((noteItem, index) => {\r\n            setTimeout(() => {\r\n                audioPlayer.playNote(noteItem.note, noteItem.octave);\r\n                setTimeout(() => audioPlayer.stopNote(), 400);\r\n            }, index * 500);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Setup voice recognition\r\n        if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n            voiceRecognitionRef.current = new SpeechRecognition();\r\n            \r\n            voiceRecognitionRef.current.continuous = true;\r\n            voiceRecognitionRef.current.interimResults = false;\r\n            voiceRecognitionRef.current.lang = 'en-US';\r\n            \r\n            voiceRecognitionRef.current.onresult = (event) => {\r\n                const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase().trim();\r\n                handleVoiceCommand(transcript);\r\n            };\r\n            \r\n            voiceRecognitionRef.current.onerror = (event) => {\r\n                console.log('Voice error:', event.error);\r\n                if (event.error === 'no-speech') {\r\n                    setTimeout(() => {\r\n                        try { voiceRecognitionRef.current.start(); } catch (e) {}\r\n                    }, 1000);\r\n                }\r\n            };\r\n            \r\n            voiceRecognitionRef.current.onend = () => {\r\n                setTimeout(() => {\r\n                    try { voiceRecognitionRef.current.start(); } catch (e) {}\r\n                }, 100);\r\n            };\r\n\r\n            // Auto-start voice recognition\r\n            setTimeout(() => {\r\n                try {\r\n                    voiceRecognitionRef.current.start();\r\n                    setVoiceState(prev => ({ \r\n                        ...prev, \r\n                        isActive: true, \r\n                        isSupported: true \r\n                    }));\r\n                    console.log('Voice recognition started');\r\n                } catch (error) {\r\n                    console.error('Voice recognition failed:', error);\r\n                    setVoiceState(prev => ({ \r\n                        ...prev, \r\n                        isSupported: true, \r\n                        isActive: false \r\n                    }));\r\n                }\r\n            }, 2000);\r\n            \r\n            setVoiceState(prev => ({ ...prev, isSupported: true }));\r\n        }\r\n\r\n        return () => {\r\n            if (voiceRecognitionRef.current) {\r\n                voiceRecognitionRef.current.stop();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"voice-controller\">\r\n            <div className=\"voice-status\">\r\n                <div className={`voice-indicator ${voiceState.isActive ? 'active' : 'inactive'}`}>\r\n                    {voiceState.isSupported ? \r\n                        (voiceState.isActive ? '🎤 Voice Active' : '🎤 Starting...') : \r\n                        '❌ Voice Not Supported'\r\n                    }\r\n                </div>\r\n                {voiceState.lastCommand && (\r\n                    <div className=\"last-command\">\r\n                        {voiceState.lastCommand}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <div className=\"composition-info\">\r\n                <h4>Composition ({composition.notes.length} notes)</h4>\r\n                <p>Current Octave: {composition.currentOctave}</p>\r\n                {composition.notes.length > 0 && (\r\n                    <div className=\"recent-notes\">\r\n                        Recent: {composition.notes.slice(-3).map(n => \r\n                            `${n.note.toUpperCase()}${n.octave}`\r\n                        ).join(', ')}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <div className=\"voice-commands\">\r\n                <h4>Voice Commands:</h4>\r\n                <ul>\r\n                    <li>\"Add\" - Add current note</li>\r\n                    <li>\"Octave up/down\" - Change octave</li>\r\n                    <li>\"Play\" - Play composition</li>\r\n                    <li>\"Clear\" - Clear all notes</li>\r\n                    <li>\"Undo\" - Remove last note</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VoiceController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}