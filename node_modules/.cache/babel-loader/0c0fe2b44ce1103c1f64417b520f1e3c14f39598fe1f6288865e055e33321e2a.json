{"ast":null,"code":"// Musical notes frequencies (A4 = 440Hz)\nconst NOTES = {\n  'do': 261.63,\n  // C4\n  're': 293.66,\n  // D4\n  'mi': 329.63,\n  // E4\n  'fa': 349.23,\n  // F4\n  'sol': 392.00,\n  // G4\n  'la': 440.00,\n  // A4\n  'ti': 493.88 // B4\n};\nclass AudioPlayer {\n  constructor() {\n    this.audioContext = null;\n    this.oscillator = null;\n    this.gainNode = null;\n    this.isPlaying = false;\n    this.currentNote = null;\n  }\n  initialize() {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      this.gainNode = this.audioContext.createGain();\n      this.gainNode.connect(this.audioContext.destination);\n      this.gainNode.gain.value = 0;\n    }\n  }\n  playNote(note) {\n    this.initialize();\n\n    // Don't restart the same note\n    if (this.currentNote === note && this.isPlaying) {\n      return;\n    }\n    this.stopNote();\n    if (NOTES[note]) {\n      this.oscillator = this.audioContext.createOscillator();\n      this.oscillator.type = 'sine';\n      this.oscillator.frequency.setValueAtTime(NOTES[note], this.audioContext.currentTime);\n      this.oscillator.connect(this.gainNode);\n      this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n      this.gainNode.gain.linearRampToValueAtTime(0.2, this.audioContext.currentTime + 0.1);\n      this.oscillator.start();\n      this.isPlaying = true;\n      this.currentNote = note;\n    }\n  }\n  stopNote() {\n    if (this.oscillator && this.isPlaying) {\n      const releaseTime = this.audioContext.currentTime + 0.1;\n      this.gainNode.gain.linearRampToValueAtTime(0, releaseTime);\n      this.oscillator.stop(releaseTime);\n      this.isPlaying = false;\n      this.currentNote = null;\n    }\n  }\n}\nexport const audioPlayer = new AudioPlayer();","map":{"version":3,"names":["NOTES","AudioPlayer","constructor","audioContext","oscillator","gainNode","isPlaying","currentNote","initialize","window","AudioContext","webkitAudioContext","createGain","connect","destination","gain","value","playNote","note","stopNote","createOscillator","type","frequency","setValueAtTime","currentTime","linearRampToValueAtTime","start","releaseTime","stop","audioPlayer"],"sources":["C:/Users/user/sol-fa-app/src/utils/audioUtils.js"],"sourcesContent":["// Musical notes frequencies (A4 = 440Hz)\r\nconst NOTES = {\r\n    'do': 261.63, // C4\r\n    're': 293.66, // D4\r\n    'mi': 329.63, // E4\r\n    'fa': 349.23, // F4\r\n    'sol': 392.00, // G4\r\n    'la': 440.00, // A4\r\n    'ti': 493.88  // B4\r\n};\r\n\r\nclass AudioPlayer {\r\n    constructor() {\r\n        this.audioContext = null;\r\n        this.oscillator = null;\r\n        this.gainNode = null;\r\n        this.isPlaying = false;\r\n        this.currentNote = null;\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.audioContext) {\r\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            this.gainNode = this.audioContext.createGain();\r\n            this.gainNode.connect(this.audioContext.destination);\r\n            this.gainNode.gain.value = 0;\r\n        }\r\n    }\r\n\r\n    playNote(note) {\r\n        this.initialize();\r\n\r\n        // Don't restart the same note\r\n        if (this.currentNote === note && this.isPlaying) {\r\n            return;\r\n        }\r\n\r\n        this.stopNote();\r\n        \r\n        if (NOTES[note]) {\r\n            this.oscillator = this.audioContext.createOscillator();\r\n            this.oscillator.type = 'sine';\r\n            this.oscillator.frequency.setValueAtTime(NOTES[note], this.audioContext.currentTime);\r\n            \r\n            this.oscillator.connect(this.gainNode);\r\n            this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\r\n            this.gainNode.gain.linearRampToValueAtTime(0.2, this.audioContext.currentTime + 0.1);\r\n            \r\n            this.oscillator.start();\r\n            this.isPlaying = true;\r\n            this.currentNote = note;\r\n        }\r\n    }\r\n\r\n    stopNote() {\r\n        if (this.oscillator && this.isPlaying) {\r\n            const releaseTime = this.audioContext.currentTime + 0.1;\r\n            this.gainNode.gain.linearRampToValueAtTime(0, releaseTime);\r\n            this.oscillator.stop(releaseTime);\r\n            this.isPlaying = false;\r\n            this.currentNote = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport const audioPlayer = new AudioPlayer();\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG;EACV,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,MAAM;EAAE;EACd,KAAK,EAAE,MAAM;EAAE;EACf,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,MAAM,CAAE;AAClB,CAAC;AAED,MAAMC,WAAW,CAAC;EACdC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,WAAW,GAAG,IAAI;EAC3B;EAEAC,UAAUA,CAAA,EAAG;IACT,IAAI,CAAC,IAAI,CAACL,YAAY,EAAE;MACpB,IAAI,CAACA,YAAY,GAAG,KAAKM,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;MAC5E,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACF,YAAY,CAACS,UAAU,CAAC,CAAC;MAC9C,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,IAAI,CAACV,YAAY,CAACW,WAAW,CAAC;MACpD,IAAI,CAACT,QAAQ,CAACU,IAAI,CAACC,KAAK,GAAG,CAAC;IAChC;EACJ;EAEAC,QAAQA,CAACC,IAAI,EAAE;IACX,IAAI,CAACV,UAAU,CAAC,CAAC;;IAEjB;IACA,IAAI,IAAI,CAACD,WAAW,KAAKW,IAAI,IAAI,IAAI,CAACZ,SAAS,EAAE;MAC7C;IACJ;IAEA,IAAI,CAACa,QAAQ,CAAC,CAAC;IAEf,IAAInB,KAAK,CAACkB,IAAI,CAAC,EAAE;MACb,IAAI,CAACd,UAAU,GAAG,IAAI,CAACD,YAAY,CAACiB,gBAAgB,CAAC,CAAC;MACtD,IAAI,CAAChB,UAAU,CAACiB,IAAI,GAAG,MAAM;MAC7B,IAAI,CAACjB,UAAU,CAACkB,SAAS,CAACC,cAAc,CAACvB,KAAK,CAACkB,IAAI,CAAC,EAAE,IAAI,CAACf,YAAY,CAACqB,WAAW,CAAC;MAEpF,IAAI,CAACpB,UAAU,CAACS,OAAO,CAAC,IAAI,CAACR,QAAQ,CAAC;MACtC,IAAI,CAACA,QAAQ,CAACU,IAAI,CAACQ,cAAc,CAAC,CAAC,EAAE,IAAI,CAACpB,YAAY,CAACqB,WAAW,CAAC;MACnE,IAAI,CAACnB,QAAQ,CAACU,IAAI,CAACU,uBAAuB,CAAC,GAAG,EAAE,IAAI,CAACtB,YAAY,CAACqB,WAAW,GAAG,GAAG,CAAC;MAEpF,IAAI,CAACpB,UAAU,CAACsB,KAAK,CAAC,CAAC;MACvB,IAAI,CAACpB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,WAAW,GAAGW,IAAI;IAC3B;EACJ;EAEAC,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACf,UAAU,IAAI,IAAI,CAACE,SAAS,EAAE;MACnC,MAAMqB,WAAW,GAAG,IAAI,CAACxB,YAAY,CAACqB,WAAW,GAAG,GAAG;MACvD,IAAI,CAACnB,QAAQ,CAACU,IAAI,CAACU,uBAAuB,CAAC,CAAC,EAAEE,WAAW,CAAC;MAC1D,IAAI,CAACvB,UAAU,CAACwB,IAAI,CAACD,WAAW,CAAC;MACjC,IAAI,CAACrB,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,WAAW,GAAG,IAAI;IAC3B;EACJ;AACJ;AAEA,OAAO,MAAMsB,WAAW,GAAG,IAAI5B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}