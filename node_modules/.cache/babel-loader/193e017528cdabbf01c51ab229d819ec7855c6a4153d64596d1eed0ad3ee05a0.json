{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\sol-fa-app\\\\src\\\\components\\\\HandDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport * as hands from '@mediapipe/hands';\nimport * as camera from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { recognizeKodalySign } from '../utils/kodalySignsDB';\nimport { audioPlayer } from '../utils/audioUtils';\nimport './HandDetection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIDENCE_THRESHOLD = 0.85;\nconst HOLD_FRAMES = 10;\nconst HandDetection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handsRef = useRef(null);\n  const cameraRef = useRef(null);\n  const [detectionState, setDetectionState] = useState({\n    sign: null,\n    confidence: 0,\n    debug: null,\n    handPresent: false\n  });\n  const lastSignRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const handleSignDetection = useCallback(recognition => {\n    const currentSign = recognition === null || recognition === void 0 ? void 0 : recognition.sign;\n    const confidence = (recognition === null || recognition === void 0 ? void 0 : recognition.confidence) || 0;\n    if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\n      if (currentSign === lastSignRef.current) {\n        frameCountRef.current++;\n        if (frameCountRef.current >= HOLD_FRAMES) {\n          audioPlayer.playNote(currentSign);\n        }\n      } else {\n        frameCountRef.current = 0;\n        lastSignRef.current = currentSign;\n        audioPlayer.stopNote();\n      }\n    } else {\n      frameCountRef.current = 0;\n      lastSignRef.current = null;\n      audioPlayer.stopNote();\n    }\n  }, []);\n  const onResults = useCallback(results => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    if (results.image) {\n      ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n        const mirroredLandmarks = landmarks.map(landmark => ({\n          ...landmark,\n          x: 1 - landmark.x\n        }));\n        const recognition = recognizeKodalySign(mirroredLandmarks);\n        handleSignDetection(recognition);\n        setDetectionState({\n          ...recognition,\n          handPresent: true\n        });\n      }\n    } else {\n      handleSignDetection(null);\n      setDetectionState({\n        sign: null,\n        confidence: 0,\n        debug: null,\n        handPresent: false\n      });\n    }\n    ctx.restore();\n  }, [handleSignDetection]);\n  useEffect(() => {\n    if (!webcamRef.current) return;\n    handsRef.current = new hands.Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n      }\n    });\n    handsRef.current.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7\n    });\n    handsRef.current.onResults(onResults);\n    if (webcamRef.current) {\n      cameraRef.current = new camera.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          if (webcamRef.current && handsRef.current) {\n            await handsRef.current.send({\n              image: webcamRef.current.video\n            });\n          }\n        },\n        width: 640,\n        height: 480\n      });\n      cameraRef.current.start();\n    }\n    return () => {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n      }\n      if (handsRef.current) {\n        handsRef.current.close();\n      }\n      audioPlayer.stopNote();\n    };\n  }, [onResults]);\n\n  // ... rest of your component remains the same ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hand-detection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-canvas-container\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          style: {\n            display: 'none'\n          },\n          width: 640,\n          height: 480,\n          mirrored: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), detectionState.sign && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: detectionState.sign.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), renderDebugInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(HandDetection, \"WdbiG5VPTwe1oXGvfNtrxUyqPuQ=\");\n_c = HandDetection;\nexport default HandDetection;\nvar _c;\n$RefreshReg$(_c, \"HandDetection\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Webcam","hands","camera","drawConnectors","drawLandmarks","recognizeKodalySign","audioPlayer","jsxDEV","_jsxDEV","CONFIDENCE_THRESHOLD","HOLD_FRAMES","HandDetection","_s","webcamRef","canvasRef","handsRef","cameraRef","detectionState","setDetectionState","sign","confidence","debug","handPresent","lastSignRef","frameCountRef","handleSignDetection","recognition","currentSign","current","playNote","stopNote","onResults","results","canvas","ctx","getContext","clearRect","width","height","save","scale","translate","image","drawImage","multiHandLandmarks","length","landmarks","HAND_CONNECTIONS","color","lineWidth","mirroredLandmarks","map","landmark","x","restore","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","Camera","video","onFrame","send","start","stop","close","className","children","ref","style","display","mirrored","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","renderDebugInfo","_c","$RefreshReg$"],"sources":["C:/Users/user/sol-fa-app/src/components/HandDetection.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as hands from '@mediapipe/hands';\r\nimport * as camera from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\nimport { recognizeKodalySign } from '../utils/kodalySignsDB';\r\nimport { audioPlayer } from '../utils/audioUtils';\r\nimport './HandDetection.css';\r\n\r\nconst CONFIDENCE_THRESHOLD = 0.85;\r\nconst HOLD_FRAMES = 10;\r\n\r\nconst HandDetection = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const handsRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const [detectionState, setDetectionState] = useState({\r\n        sign: null,\r\n        confidence: 0,\r\n        debug: null,\r\n        handPresent: false\r\n    });\r\n    \r\n    const lastSignRef = useRef(null);\r\n    const frameCountRef = useRef(0);\r\n\r\n    const handleSignDetection = useCallback((recognition) => {\r\n        const currentSign = recognition?.sign;\r\n        const confidence = recognition?.confidence || 0;\r\n\r\n        if (currentSign && confidence >= CONFIDENCE_THRESHOLD) {\r\n            if (currentSign === lastSignRef.current) {\r\n                frameCountRef.current++;\r\n                if (frameCountRef.current >= HOLD_FRAMES) {\r\n                    audioPlayer.playNote(currentSign);\r\n                }\r\n            } else {\r\n                frameCountRef.current = 0;\r\n                lastSignRef.current = currentSign;\r\n                audioPlayer.stopNote();\r\n            }\r\n        } else {\r\n            frameCountRef.current = 0;\r\n            lastSignRef.current = null;\r\n            audioPlayer.stopNote();\r\n        }\r\n    }, []);\r\n\r\n    const onResults = useCallback((results) => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n        ctx.scale(-1, 1);\r\n        ctx.translate(-canvas.width, 0);\r\n\r\n        if (results.image) {\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n            for (const landmarks of results.multiHandLandmarks) {\r\n                drawConnectors(ctx, landmarks, hands.HAND_CONNECTIONS, {\r\n                    color: '#00FF00',\r\n                    lineWidth: 5\r\n                });\r\n                drawLandmarks(ctx, landmarks, {\r\n                    color: '#FF0000',\r\n                    lineWidth: 2\r\n                });\r\n\r\n                const mirroredLandmarks = landmarks.map(landmark => ({\r\n                    ...landmark,\r\n                    x: 1 - landmark.x\r\n                }));\r\n\r\n                const recognition = recognizeKodalySign(mirroredLandmarks);\r\n                handleSignDetection(recognition);\r\n                setDetectionState({\r\n                    ...recognition,\r\n                    handPresent: true\r\n                });\r\n            }\r\n        } else {\r\n            handleSignDetection(null);\r\n            setDetectionState({\r\n                sign: null,\r\n                confidence: 0,\r\n                debug: null,\r\n                handPresent: false\r\n            });\r\n        }\r\n\r\n        ctx.restore();\r\n    }, [handleSignDetection]);\r\n\r\n    useEffect(() => {\r\n        if (!webcamRef.current) return;\r\n\r\n        handsRef.current = new hands.Hands({\r\n            locateFile: (file) => {\r\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n            }\r\n        });\r\n\r\n        handsRef.current.setOptions({\r\n            maxNumHands: 1,\r\n            modelComplexity: 1,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7\r\n        });\r\n\r\n        handsRef.current.onResults(onResults);\r\n\r\n        if (webcamRef.current) {\r\n            cameraRef.current = new camera.Camera(webcamRef.current.video, {\r\n                onFrame: async () => {\r\n                    if (webcamRef.current && handsRef.current) {\r\n                        await handsRef.current.send({\r\n                            image: webcamRef.current.video\r\n                        });\r\n                    }\r\n                },\r\n                width: 640,\r\n                height: 480\r\n            });\r\n            cameraRef.current.start();\r\n        }\r\n\r\n        return () => {\r\n            if (cameraRef.current) {\r\n                cameraRef.current.stop();\r\n            }\r\n            if (handsRef.current) {\r\n                handsRef.current.close();\r\n            }\r\n            audioPlayer.stopNote();\r\n        };\r\n    }, [onResults]);\r\n\r\n    // ... rest of your component remains the same ...\r\n\r\n    return (\r\n        <div className=\"hand-detection\">\r\n            <div className=\"main-container\">\r\n                <div className=\"camera-canvas-container\">\r\n                    <Webcam\r\n                        ref={webcamRef}\r\n                        style={{ display: 'none' }}\r\n                        width={640}\r\n                        height={480}\r\n                        mirrored={false}\r\n                    />\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={640}\r\n                        height={480}\r\n                    />\r\n                    {detectionState.sign && (\r\n                        <div className={`sign-indicator ${frameCountRef.current >= HOLD_FRAMES ? 'playing' : ''}`}>\r\n                            <h2>{detectionState.sign.toUpperCase()}</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {renderDebugInfo()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}